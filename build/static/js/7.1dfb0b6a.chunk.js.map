{"version":3,"sources":["views/Home/Components/UploadImage/UploadImage.js","views/Home/Components/ToolPost/ToolPost.js","views/Home/Components/ListContent/ListContent.js","views/Home/Components/ToolWeather/ToolWeather.js","views/Home/Home.js","views/Home/index.js"],"names":["getBase64","file","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","result","onerror","error","UploadImage","useState","previewVisible","setPreviewVisible","previewImage","setPreviewImage","fileList","setFileList","handlePreview","a","url","preview","originFileObj","uploadButton","type","className","action","multiple","listType","onPreview","onChange","console","log","length","visible","footer","onCancel","alt","style","width","src","TextArea","Input","ToolPost","content","Item","autoSize","placeholder","allowClear","title","size","actions","key","tags","color","avatar","margin","padding","children","ManyComponent","listData","setListData","hasMoreItems","setHasMoreItems","setLoading","IconText","text","marginRight","pageStart","loadMore","page","message","warning","setTimeout","hasMore","itemLayout","dataSource","renderItem","item","Meta","description","gutter","xl","lg","md","sm","map","value","float","shape","ToolWeather","visitData","beginDay","Date","getTime","i","push","x","moment","format","y","Math","floor","random","height","fontSize","total","contentHeight","bordered","subTitle","status","subTotal","line","data","Home","props","useEffect","navigator","geolocation","getCurrentPosition","posi","lat","coords","latitude","long","longitude"],"mappings":"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","file":"static/js/7.1dfb0b6a.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport { Upload, Icon, Modal } from 'antd';\r\nimport './styles.css';\r\n\r\nfunction getBase64(file) {\r\n    return new Promise((resolve, reject) => {\r\n        const reader = new FileReader();\r\n        reader.readAsDataURL(file);\r\n        reader.onload = () => resolve(reader.result);\r\n        reader.onerror = error => reject(error);\r\n    });\r\n}\r\n\r\nconst UploadImage = () => {\r\n    const [previewVisible, setPreviewVisible] = useState(false);\r\n    const [previewImage, setPreviewImage] = useState('');\r\n    const [fileList, setFileList] = useState([]);\r\n    const handleCancel = () => setPreviewVisible(false);\r\n    const handlePreview = async file => {\r\n        if (!file.url && !file.preview) {\r\n            file.preview = await getBase64(file.originFileObj);\r\n        }\r\n        setPreviewImage(file.url || file.preview);\r\n        setPreviewVisible(true);\r\n    };\r\n    const handleChange = ({ fileList }) => {\r\n        console.log(fileList)\r\n        setFileList(fileList)\r\n    };\r\n    const uploadButton = (\r\n        <div>\r\n            <Icon type=\"plus\" />\r\n            <div className=\"ant-upload-text\">Upload</div>\r\n        </div>\r\n    );\r\n    \r\n    return (\r\n        <div className=\"clearfix\">\r\n            <Upload\r\n                action=\"https://www.mocky.io/v2/5cc8019d300000980a055e76\"\r\n                multiple={true}\r\n                listType=\"picture-card\"\r\n                fileList={[...fileList]}\r\n                onPreview={handlePreview}\r\n                onChange={handleChange}\r\n            >\r\n                {fileList.length >= 8 ? null : uploadButton}\r\n            </Upload>\r\n            <Modal\r\n                visible={previewVisible}\r\n                footer={null}\r\n                onCancel={handleCancel}\r\n            >\r\n                <img\r\n                    alt=\"example\"\r\n                    style={{ width: '100%' }}\r\n                    src={previewImage}\r\n                />\r\n            </Modal>\r\n        </div>\r\n    );\r\n};\r\nexport default UploadImage;\r\n","import React from 'react';\r\nimport { PageHeader, Icon, Tag, Row, Card, Form, Input, Col } from 'antd';\r\nimport UploadImage from './../UploadImage';\r\nconst { TextArea } = Input;\r\n\r\nexport default function ToolPost() {\r\n    const content = (\r\n        <>\r\n            <Col>\r\n                <Form>\r\n                    <Form.Item>\r\n                        <TextArea\r\n                            autoSize\r\n                            placeholder=\"What are you thinking?\"\r\n                            allowClear\r\n                        />\r\n                    </Form.Item>\r\n                    <Form.Item>\r\n                        <UploadImage />\r\n                    </Form.Item>\r\n                </Form>\r\n            </Col>\r\n        </>\r\n    );\r\n\r\n    const Content = ({ children }) => {\r\n        return <Row>{children}</Row>;\r\n    };\r\n\r\n    return (\r\n        <Card\r\n            title=\"Create Post\"\r\n            size=\"small\"\r\n            actions={[<Icon title=\"post\" type=\"edit\" key=\"edit\" />]}\r\n        >\r\n            <PageHeader\r\n                title=\"Ao Nguyen\"\r\n                tags={<Tag color=\"blue\">Online</Tag>}\r\n                avatar={{\r\n                    src:\r\n                        'https://avatars1.githubusercontent.com/u/8186664?s=460&v=4'\r\n                }}\r\n                style={{ margin: '0px', padding: '0px' }}\r\n            >\r\n                <Content>{content}</Content>\r\n            </PageHeader>\r\n        </Card>\r\n    );\r\n}\r\n","import React, { useState } from 'react';\r\nimport { List, message, Avatar, Spin, Card, Icon, Row, Col } from 'antd';\r\nimport axios from 'axios';\r\nimport { BASE_URI } from './../../../../constants/base_url';\r\n\r\nimport InfiniteScroll from 'react-infinite-scroller';\r\nimport './styles.css';\r\n\r\nexport default function ManyComponent() {\r\n    const [listData, setListData] = useState([]);\r\n    const [hasMoreItems, setHasMoreItems] = useState(true);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const IconText = ({ type, text }) => (\r\n        <span>\r\n            <Icon type={type} style={{ marginRight: 8 }} />\r\n            {text}\r\n        </span>\r\n    );\r\n\r\n    const loadItems = page => {\r\n        // axios\r\n        //     .get(BASE_URI + '/getAllData', {\r\n        //         params: {\r\n        //             page,\r\n        //             page_size: 20\r\n        //         }\r\n        //     })\r\n        //     .then(res => {\r\n        //         const items = res.data;\r\n        //         setTracks([...tracks, ...items.users]);\r\n        //     })\r\n        //     .catch(err => {\r\n        //         setHasMoreItems(false);\r\n        //     });\r\n        const data = [\r\n            {\r\n                title: 'ao nguyen',\r\n                avatar:\r\n                    'https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png',\r\n                content:\r\n                    'We supply a series of design principles, practical patterns and high quality design resources (Sketch and Axure), to help people create their product prototypes beautifully and efficiently.'\r\n            }\r\n        ];\r\n        setLoading(true);\r\n        if (listData.length === 20) {\r\n            message.warning('Infinite List loaded all');\r\n            setHasMoreItems(false);\r\n            setLoading(false);\r\n            return;\r\n        }\r\n        setTimeout(setListData([...listData, ...data]), 5000);\r\n    };\r\n    const renderImage = () => {\r\n        const images = [\r\n            {\r\n                src: 'https://gw.alipayobjects.com/zos/rmsportal/mqaQswcyDLcXyDKnZfES.png'\r\n            },\r\n            {\r\n                src: 'https://gw.alipayobjects.com/zos/rmsportal/mqaQswcyDLcXyDKnZfES.png'\r\n            },\r\n            {\r\n                src: 'https://gw.alipayobjects.com/zos/rmsportal/mqaQswcyDLcXyDKnZfES.png'\r\n            },\r\n            {\r\n                src: 'https://gw.alipayobjects.com/zos/rmsportal/mqaQswcyDLcXyDKnZfES.png'\r\n            }\r\n        ];\r\n        return images.map((value, key) => {\r\n            return (\r\n                <div key={key} style={{float: 'left', margin: '3px'}}>\r\n                    <Avatar\r\n                        shape=\"square\"\r\n                        size={164}\r\n                        src={value.src}\r\n                    />\r\n                </div>\r\n            )\r\n        });\r\n    };\r\n\r\n    return (\r\n        <div className=\"list-content\">\r\n            <InfiniteScroll\r\n                pageStart={0}\r\n                loadMore={loadItems}\r\n                hasMore={hasMoreItems}\r\n            >\r\n                <List\r\n                    itemLayout=\"vertical\"\r\n                    size=\"small\"\r\n                    dataSource={listData}\r\n                    renderItem={item => (\r\n                        <List.Item\r\n                            key={item.title}\r\n                            actions={[\r\n                                <IconText\r\n                                    type=\"like-o\"\r\n                                    text=\"156\"\r\n                                    key=\"list-vertical-like-o\"\r\n                                />,\r\n                                <IconText\r\n                                    type=\"dislike-o\"\r\n                                    text=\"156\"\r\n                                    key=\"list-vertical-like-o\"\r\n                                />,\r\n                                <IconText\r\n                                    type=\"message\"\r\n                                    text=\"2\"\r\n                                    key=\"list-vertical-message\"\r\n                                />\r\n                            ]}\r\n                        >\r\n                            <List.Item.Meta\r\n                                avatar={<Avatar src={item.avatar} />}\r\n                                title={item.title}\r\n                                description='12/12/2020'\r\n                            />\r\n                            <Row gutter={[16, 16]}>\r\n                                <Col>{item.content}</Col>\r\n                            </Row>\r\n                            <Row gutter={[16, 16]}>\r\n                                <Col xl={24} lg={24} md={24} sm={24}>\r\n                                    {renderImage()}\r\n                                </Col>\r\n                            </Row>\r\n                        </List.Item>\r\n                    )}\r\n                >\r\n                    {hasMoreItems && (\r\n                        <div className=\"loading-content\">\r\n                            <Spin />\r\n                        </div>\r\n                    )}\r\n                </List>\r\n            </InfiniteScroll>\r\n        </div>\r\n    );\r\n}\r\n\r\n// export default class InfiniteListExample extends React.Component {\r\n//   state = {\r\n//     data: [],\r\n//     loading: false,\r\n//     hasMore: true,\r\n//   };\r\n\r\n//   componentDidMount() {\r\n//     // this.fetchData(res => {\r\n//     //   this.setState({\r\n//     //     data: res.results,\r\n//     //   });\r\n//     // });\r\n//     this.setState({\r\n//         data: [{\r\n//             id: '1',\r\n//             name: 'ao nguyen',\r\n//             email: 'aonguyen@gmail.com'\r\n//         }]\r\n//     });\r\n//   }\r\n\r\n// //   fetchData = callback => {\r\n// //     reqwest({\r\n// //       url: fakeDataUrl,\r\n// //       type: 'json',\r\n// //       method: 'get',\r\n// //       contentType: 'application/json',\r\n// //       success: res => {\r\n// //         callback(res);\r\n// //       },\r\n// //     });\r\n// //   };\r\n\r\n//   handleInfiniteOnLoad = () => {\r\n//     let { data } = this.state;\r\n//     this.setState({\r\n//       loading: true,\r\n//     });\r\n//     if (data.length > 14) {\r\n//       message.warning('Infinite List loaded all');\r\n//       this.setState({\r\n//         hasMore: false,\r\n//         loading: false,\r\n//       });\r\n//       return;\r\n//     }\r\n//     this.fetchData(res => {\r\n//       data = data.concat(res.results);\r\n//       this.setState({\r\n//         data,\r\n//         loading: false,\r\n//       });\r\n//     });\r\n//   };\r\n\r\n//   render() {\r\n//     return (\r\n//       <div className=\"list-content\">\r\n//         <InfiniteScroll\r\n//           initialLoad={false}\r\n//           pageStart={0}\r\n//           loadMore={this.handleInfiniteOnLoad}\r\n//           hasMore={!this.state.loading && this.state.hasMore}\r\n//           useWindow={false}\r\n//         >\r\n//           <List\r\n//             dataSource={this.state.data}\r\n//             renderItem={item => (\r\n//               <List.Item key={item.id}>\r\n//                 <List.Item.Meta\r\n//                   avatar={\r\n//                     <Avatar src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\" />\r\n//                   }\r\n//                   title={<a href=\"https://ant.design\">{item.name}</a>}\r\n//                   description={item.email}\r\n//                 />\r\n//                 <div>Content</div>\r\n//               </List.Item>\r\n//             )}\r\n//           >\r\n//             {this.state.loading && this.state.hasMore && (\r\n//               <div className=\"loading-content\">\r\n//                 <Spin />\r\n//               </div>\r\n//             )}\r\n//           </List>\r\n//         </InfiniteScroll>\r\n//       </div>\r\n//     );\r\n//   }\r\n// }\r\n","import React from 'react';\r\nimport { Card, Icon } from 'antd';\r\nimport {\r\n    ChartCard,\r\n    MiniArea,\r\n} from 'ant-design-pro/lib/Charts';\r\nimport NumberInfo from 'ant-design-pro/lib/NumberInfo';\r\nimport moment from 'moment';\r\n\r\nexport default function ToolWeather() {\r\n    const visitData = [];\r\n    const beginDay = new Date().getTime();\r\n    for (let i = 0; i < 20; i += 1) {\r\n        visitData.push({\r\n            x: moment(new Date(beginDay + 1000 * 60 * 60 * 24 * i)).format(\r\n                'YYYY-MM-DD'\r\n            ),\r\n            y: Math.floor(Math.random() * 100) + 10\r\n        });\r\n    }\r\n\r\n    return (\r\n        <Card size=\"small\" title=\"Today weather\" style={{ height: '100%' }}>\r\n            <Card.Meta\r\n                description=\"Weather\"\r\n                title=\"Binh Tan, Tay Son, Binh Dinh\"\r\n                avatar={<Icon type=\"cloud\" style={{ fontSize: '20px' }} />}\r\n            />\r\n\r\n            <ChartCard\r\n                title=\"搜索用户数量\"\r\n                total={8846}\r\n                contentHeight={163}\r\n                bordered={false}\r\n            >\r\n                <NumberInfo\r\n                    subTitle={<span>本周访问</span>}\r\n                    total={12321}\r\n                    status=\"up\"\r\n                    subTotal={17.1}\r\n                />\r\n                <MiniArea line height={45} data={visitData} />\r\n            </ChartCard>\r\n        </Card>\r\n    );\r\n}\r\n","import React, { lazy, Suspense, useEffect } from 'react';\r\nimport { Row, Col } from 'antd';\r\n//import { GlobalLoading } from './../../components';\r\nimport { ToolPost, ListContent, ToolWeather } from './Components';\r\nimport './styles.css';\r\n\r\nfunction Home(props) {\r\n\r\n    useEffect(() => {\r\n        if(navigator.geolocation)\r\n        {\r\n            navigator.geolocation.getCurrentPosition((posi) => {\r\n                const lat = posi.coords.latitude;\r\n                const long = posi.coords.longitude;\r\n                console.log(lat, long)\r\n            })\r\n        }\r\n    })\r\n    \r\n    return (\r\n        <>\r\n            <Row gutter={[20, 20]}>\r\n                <Col lg={10} md={10}>\r\n                    <ToolPost />\r\n                </Col>\r\n                <Col lg={14} md={14} sm={24}>\r\n                    <ToolWeather />\r\n                </Col>\r\n            </Row>\r\n            <Row gutter={[20, 20]}>\r\n                <Col>\r\n                    <ListContent />\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    );\r\n}\r\nexport default Home;\r\n","export { default } from './Home';"],"sourceRoot":""}