{"ast":null,"code":"var _jsxFileName = \"E:\\\\web_ungdung\\\\frontend\\\\src\\\\components\\\\test\\\\ManyComponent.jsx\";\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport InfiniteScroll from 'react-infinite-scroller';\nimport { Spin, Icon } from 'antd';\nimport { BASE_URI } from './../../constants/base_url';\nexport default function ManyComponent() {\n  const [tracks, setTracks] = useState([]);\n  const [hasMoreItems, setHasMoreItems] = useState(true);\n\n  const loadItems = page => {\n    axios.get(BASE_URI + '/getAllData', {\n      params: {\n        page,\n        page_size: 20\n      }\n    }).then(res => {\n      const items = res.data;\n      setTracks([...tracks, ...items.users]);\n    }).catch(err => {\n      setHasMoreItems(false);\n    });\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, \"danh sach cac ten user\"), React.createElement(InfiniteScroll, {\n    pageStart: -1,\n    loadMore: loadItems,\n    hasMore: hasMoreItems,\n    loader: React.createElement(Spin, {\n      indicator: React.createElement(Icon, {\n        type: \"loading\",\n        style: {\n          fontSize: 20\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }),\n      key: 0,\n      tip: \"loading...\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"tracks\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(\"ol\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, tracks.map(value => React.createElement(\"li\", {\n    key: value._id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, value.name))))));\n}","map":{"version":3,"sources":["E:/web_ungdung/frontend/src/components/test/ManyComponent.jsx"],"names":["React","useState","axios","InfiniteScroll","Spin","Icon","BASE_URI","ManyComponent","tracks","setTracks","hasMoreItems","setHasMoreItems","loadItems","page","get","params","page_size","then","res","items","data","users","catch","err","fontSize","map","value","_id","name"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,yBAA3B;AACA,SAASC,IAAT,EAAeC,IAAf,QAA2B,MAA3B;AACA,SAASC,QAAT,QAAyB,4BAAzB;AAEA,eAAe,SAASC,aAAT,GAAyB;AACpC,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBR,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACS,YAAD,EAAeC,eAAf,IAAkCV,QAAQ,CAAC,IAAD,CAAhD;;AAEA,QAAMW,SAAS,GAAGC,IAAI,IAAI;AACtBX,IAAAA,KAAK,CACAY,GADL,CACSR,QAAQ,GAAC,aADlB,EACiC;AACzBS,MAAAA,MAAM,EAAE;AACJF,QAAAA,IADI;AAEJG,QAAAA,SAAS,EAAE;AAFP;AADiB,KADjC,EAOKC,IAPL,CAOUC,GAAG,IAAI;AACT,YAAMC,KAAK,GAAGD,GAAG,CAACE,IAAlB;AACAX,MAAAA,SAAS,CAAC,CAAC,GAAGD,MAAJ,EAAY,GAAGW,KAAK,CAACE,KAArB,CAAD,CAAT;AACH,KAVL,EAWKC,KAXL,CAWWC,GAAG,IAAI;AACVZ,MAAAA,eAAe,CAAC,KAAD,CAAf;AACH,KAbL;AAcH,GAfD;;AAiBA,SACI,0CACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADJ,EAEI,oBAAC,cAAD;AACI,IAAA,SAAS,EAAE,CAAC,CADhB;AAEI,IAAA,QAAQ,EAAEC,SAFd;AAGI,IAAA,OAAO,EAAEF,YAHb;AAII,IAAA,MAAM,EACF,oBAAC,IAAD;AACI,MAAA,SAAS,EACL,oBAAC,IAAD;AAAM,QAAA,IAAI,EAAC,SAAX;AAAqB,QAAA,KAAK,EAAE;AAAEc,UAAAA,QAAQ,EAAE;AAAZ,SAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFR;AAII,MAAA,GAAG,EAAE,CAJT;AAKI,MAAA,GAAG,EAAC,YALR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAcI;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKhB,MAAM,CAACiB,GAAP,CAAWC,KAAK,IACb;AAAI,IAAA,GAAG,EAAEA,KAAK,CAACC,GAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAqBD,KAAK,CAACE,IAA3B,CADH,CADL,CADJ,CAdJ,CAFJ,CADJ;AA2BH","sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport InfiniteScroll from 'react-infinite-scroller';\r\nimport { Spin, Icon } from 'antd';\r\nimport { BASE_URI } from './../../constants/base_url';\r\n\r\nexport default function ManyComponent() {\r\n    const [tracks, setTracks] = useState([]);\r\n    const [hasMoreItems, setHasMoreItems] = useState(true);\r\n\r\n    const loadItems = page => {\r\n        axios\r\n            .get(BASE_URI+'/getAllData', {\r\n                params: {\r\n                    page,\r\n                    page_size: 20\r\n                }\r\n            })\r\n            .then(res => {\r\n                const items = res.data;\r\n                setTracks([...tracks, ...items.users]);\r\n            })\r\n            .catch(err => {\r\n                setHasMoreItems(false);\r\n            });\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <h3>danh sach cac ten user</h3>\r\n            <InfiniteScroll\r\n                pageStart={-1}\r\n                loadMore={loadItems}\r\n                hasMore={hasMoreItems}\r\n                loader={\r\n                    <Spin\r\n                        indicator={\r\n                            <Icon type=\"loading\" style={{ fontSize: 20 }} />\r\n                        }\r\n                        key={0}\r\n                        tip=\"loading...\"\r\n                    />\r\n                }\r\n            >\r\n                <div className=\"tracks\">\r\n                    <ol>\r\n                        {tracks.map(value => (\r\n                            <li key={value._id}>{value.name}</li>\r\n                        ))}\r\n                    </ol>\r\n                </div>\r\n            </InfiniteScroll>\r\n        </>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}