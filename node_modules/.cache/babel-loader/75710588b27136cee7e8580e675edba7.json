{"ast":null,"code":"var _jsxFileName = \"E:\\\\web_ungdung\\\\frontend\\\\src\\\\views\\\\Home\\\\Components\\\\ListContent\\\\ListContent.js\";\nimport React, { useState } from 'react';\nimport { List, message, Avatar, Spin, Card, Icon, Row, Col } from 'antd';\nimport axios from 'axios';\nimport { BASE_URI } from './../../../../constants/base_url';\nimport InfiniteScroll from 'react-infinite-scroller';\nimport './styles.css';\nexport default function ManyComponent() {\n  const [listData, setListData] = useState([]);\n  const [hasMoreItems, setHasMoreItems] = useState(true);\n  const [loading, setLoading] = useState(false);\n\n  const IconText = ({\n    type,\n    text\n  }) => React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, React.createElement(Icon, {\n    type: type,\n    style: {\n      marginRight: 8\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }), text);\n\n  const loadItems = page => {\n    // axios\n    //     .get(BASE_URI + '/getAllData', {\n    //         params: {\n    //             page,\n    //             page_size: 20\n    //         }\n    //     })\n    //     .then(res => {\n    //         const items = res.data;\n    //         setTracks([...tracks, ...items.users]);\n    //     })\n    //     .catch(err => {\n    //         setHasMoreItems(false);\n    //     });\n    const data = [{\n      title: 'ao nguyen',\n      avatar: 'https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png',\n      content: 'We supply a series of design principles, practical patterns and high quality design resources (Sketch and Axure), to help people create their product prototypes beautifully and efficiently.'\n    }];\n    setLoading(true);\n\n    if (listData.length === 50) {\n      message.warning('Infinite List loaded all');\n      setHasMoreItems(false);\n      setLoading(false);\n      return;\n    }\n\n    setTimeout(setListData([...listData, ...data]), 5000);\n  };\n\n  const renderImage = () => {\n    const images = [React.createElement(Avatar, {\n      shape: \"square\",\n      size: 164,\n      src: \"https://gw.alipayobjects.com/zos/rmsportal/mqaQswcyDLcXyDKnZfES.png\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }), React.createElement(Avatar, {\n      shape: \"square\",\n      size: 164,\n      src: \"https://gw.alipayobjects.com/zos/rmsportal/mqaQswcyDLcXyDKnZfES.png\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }), React.createElement(Avatar, {\n      shape: \"square\",\n      size: 164,\n      src: \"https://gw.alipayobjects.com/zos/rmsportal/mqaQswcyDLcXyDKnZfES.png\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    })];\n    return images.map((value, key) => {\n      return React.createElement(List.Item, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, value);\n    });\n  };\n\n  return React.createElement(\"div\", {\n    className: \"list-content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, React.createElement(InfiniteScroll, {\n    pageStart: 0,\n    loadMore: loadItems,\n    hasMore: hasMoreItems,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, React.createElement(List, {\n    itemLayout: \"vertical\",\n    size: \"small\",\n    dataSource: listData,\n    renderItem: item => React.createElement(List.Item, {\n      key: item.title,\n      actions: [React.createElement(IconText, {\n        type: \"like-o\",\n        text: \"156\",\n        key: \"list-vertical-like-o\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }), React.createElement(IconText, {\n        type: \"dislike-o\",\n        text: \"156\",\n        key: \"list-vertical-like-o\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }), React.createElement(IconText, {\n        type: \"message\",\n        text: \"2\",\n        key: \"list-vertical-message\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      })],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(List.Item.Meta, {\n      avatar: React.createElement(Avatar, {\n        src: item.avatar,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }),\n      title: item.title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }), React.createElement(Row, {\n      gutter: [16, 16],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, item.content)), React.createElement(Row, {\n      gutter: [16, 16],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(Col, {\n      lg: 7,\n      md: 7,\n      sm: 24,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, React.createElement(List, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, renderImage())))),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, hasMoreItems && React.createElement(\"div\", {\n    className: \"loading-content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }, React.createElement(Spin, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  })))));\n} // export default class InfiniteListExample extends React.Component {\n//   state = {\n//     data: [],\n//     loading: false,\n//     hasMore: true,\n//   };\n//   componentDidMount() {\n//     // this.fetchData(res => {\n//     //   this.setState({\n//     //     data: res.results,\n//     //   });\n//     // });\n//     this.setState({\n//         data: [{\n//             id: '1',\n//             name: 'ao nguyen',\n//             email: 'aonguyen@gmail.com'\n//         }]\n//     });\n//   }\n// //   fetchData = callback => {\n// //     reqwest({\n// //       url: fakeDataUrl,\n// //       type: 'json',\n// //       method: 'get',\n// //       contentType: 'application/json',\n// //       success: res => {\n// //         callback(res);\n// //       },\n// //     });\n// //   };\n//   handleInfiniteOnLoad = () => {\n//     let { data } = this.state;\n//     this.setState({\n//       loading: true,\n//     });\n//     if (data.length > 14) {\n//       message.warning('Infinite List loaded all');\n//       this.setState({\n//         hasMore: false,\n//         loading: false,\n//       });\n//       return;\n//     }\n//     this.fetchData(res => {\n//       data = data.concat(res.results);\n//       this.setState({\n//         data,\n//         loading: false,\n//       });\n//     });\n//   };\n//   render() {\n//     return (\n//       <div className=\"list-content\">\n//         <InfiniteScroll\n//           initialLoad={false}\n//           pageStart={0}\n//           loadMore={this.handleInfiniteOnLoad}\n//           hasMore={!this.state.loading && this.state.hasMore}\n//           useWindow={false}\n//         >\n//           <List\n//             dataSource={this.state.data}\n//             renderItem={item => (\n//               <List.Item key={item.id}>\n//                 <List.Item.Meta\n//                   avatar={\n//                     <Avatar src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\" />\n//                   }\n//                   title={<a href=\"https://ant.design\">{item.name}</a>}\n//                   description={item.email}\n//                 />\n//                 <div>Content</div>\n//               </List.Item>\n//             )}\n//           >\n//             {this.state.loading && this.state.hasMore && (\n//               <div className=\"loading-content\">\n//                 <Spin />\n//               </div>\n//             )}\n//           </List>\n//         </InfiniteScroll>\n//       </div>\n//     );\n//   }\n// }","map":{"version":3,"sources":["E:/web_ungdung/frontend/src/views/Home/Components/ListContent/ListContent.js"],"names":["React","useState","List","message","Avatar","Spin","Card","Icon","Row","Col","axios","BASE_URI","InfiniteScroll","ManyComponent","listData","setListData","hasMoreItems","setHasMoreItems","loading","setLoading","IconText","type","text","marginRight","loadItems","page","data","title","avatar","content","length","warning","setTimeout","renderImage","images","map","value","key","item"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { List, message, Avatar, Spin, Card, Icon, Row, Col } from 'antd';\r\nimport axios from 'axios';\r\nimport { BASE_URI } from './../../../../constants/base_url';\r\n\r\nimport InfiniteScroll from 'react-infinite-scroller';\r\nimport './styles.css';\r\n\r\nexport default function ManyComponent() {\r\n    const [listData, setListData] = useState([]);\r\n    const [hasMoreItems, setHasMoreItems] = useState(true);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const IconText = ({ type, text }) => (\r\n        <span>\r\n            <Icon type={type} style={{ marginRight: 8 }} />\r\n            {text}\r\n        </span>\r\n    );\r\n\r\n    const loadItems = page => {\r\n        // axios\r\n        //     .get(BASE_URI + '/getAllData', {\r\n        //         params: {\r\n        //             page,\r\n        //             page_size: 20\r\n        //         }\r\n        //     })\r\n        //     .then(res => {\r\n        //         const items = res.data;\r\n        //         setTracks([...tracks, ...items.users]);\r\n        //     })\r\n        //     .catch(err => {\r\n        //         setHasMoreItems(false);\r\n        //     });\r\n        const data = [\r\n            {\r\n                title: 'ao nguyen',\r\n                avatar:\r\n                    'https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png',\r\n                content:\r\n                    'We supply a series of design principles, practical patterns and high quality design resources (Sketch and Axure), to help people create their product prototypes beautifully and efficiently.'\r\n            }\r\n        ];\r\n        setLoading(true);\r\n        if (listData.length === 50) {\r\n            message.warning('Infinite List loaded all');\r\n            setHasMoreItems(false);\r\n            setLoading(false);\r\n            return;\r\n        }\r\n        setTimeout(setListData([...listData, ...data]), 5000);\r\n    };\r\n    const renderImage = () => {\r\n        const images = [\r\n            <Avatar\r\n                shape=\"square\"\r\n                size={164}\r\n                src=\"https://gw.alipayobjects.com/zos/rmsportal/mqaQswcyDLcXyDKnZfES.png\"\r\n            />,\r\n            <Avatar\r\n                shape=\"square\"\r\n                size={164}\r\n                src=\"https://gw.alipayobjects.com/zos/rmsportal/mqaQswcyDLcXyDKnZfES.png\"\r\n            />,\r\n            <Avatar\r\n                shape=\"square\"\r\n                size={164}\r\n                src=\"https://gw.alipayobjects.com/zos/rmsportal/mqaQswcyDLcXyDKnZfES.png\"\r\n            />\r\n        ];\r\n        return images.map((value, key) => {\r\n            return <List.Item>{value}</List.Item>;\r\n        });\r\n    };\r\n\r\n    return (\r\n        <div className=\"list-content\">\r\n            <InfiniteScroll\r\n                pageStart={0}\r\n                loadMore={loadItems}\r\n                hasMore={hasMoreItems}\r\n            >\r\n                <List\r\n                    itemLayout=\"vertical\"\r\n                    size=\"small\"\r\n                    dataSource={listData}\r\n                    renderItem={item => (\r\n                        <List.Item\r\n                            key={item.title}\r\n                            actions={[\r\n                                <IconText\r\n                                    type=\"like-o\"\r\n                                    text=\"156\"\r\n                                    key=\"list-vertical-like-o\"\r\n                                />,\r\n                                <IconText\r\n                                    type=\"dislike-o\"\r\n                                    text=\"156\"\r\n                                    key=\"list-vertical-like-o\"\r\n                                />,\r\n                                <IconText\r\n                                    type=\"message\"\r\n                                    text=\"2\"\r\n                                    key=\"list-vertical-message\"\r\n                                />\r\n                            ]}\r\n                        >\r\n                            <List.Item.Meta\r\n                                avatar={<Avatar src={item.avatar} />}\r\n                                title={item.title}\r\n                            />\r\n                            <Row gutter={[16, 16]}>\r\n                                <Col>{item.content}</Col>\r\n                            </Row>\r\n                            <Row gutter={[16, 16]}>\r\n                                <Col lg={7} md={7} sm={24}>\r\n                                    <List>{renderImage()}</List>\r\n                                </Col>\r\n                            </Row>\r\n                        </List.Item>\r\n                    )}\r\n                >\r\n                    {hasMoreItems && (\r\n                        <div className=\"loading-content\">\r\n                            <Spin />\r\n                        </div>\r\n                    )}\r\n                </List>\r\n            </InfiniteScroll>\r\n        </div>\r\n    );\r\n}\r\n\r\n// export default class InfiniteListExample extends React.Component {\r\n//   state = {\r\n//     data: [],\r\n//     loading: false,\r\n//     hasMore: true,\r\n//   };\r\n\r\n//   componentDidMount() {\r\n//     // this.fetchData(res => {\r\n//     //   this.setState({\r\n//     //     data: res.results,\r\n//     //   });\r\n//     // });\r\n//     this.setState({\r\n//         data: [{\r\n//             id: '1',\r\n//             name: 'ao nguyen',\r\n//             email: 'aonguyen@gmail.com'\r\n//         }]\r\n//     });\r\n//   }\r\n\r\n// //   fetchData = callback => {\r\n// //     reqwest({\r\n// //       url: fakeDataUrl,\r\n// //       type: 'json',\r\n// //       method: 'get',\r\n// //       contentType: 'application/json',\r\n// //       success: res => {\r\n// //         callback(res);\r\n// //       },\r\n// //     });\r\n// //   };\r\n\r\n//   handleInfiniteOnLoad = () => {\r\n//     let { data } = this.state;\r\n//     this.setState({\r\n//       loading: true,\r\n//     });\r\n//     if (data.length > 14) {\r\n//       message.warning('Infinite List loaded all');\r\n//       this.setState({\r\n//         hasMore: false,\r\n//         loading: false,\r\n//       });\r\n//       return;\r\n//     }\r\n//     this.fetchData(res => {\r\n//       data = data.concat(res.results);\r\n//       this.setState({\r\n//         data,\r\n//         loading: false,\r\n//       });\r\n//     });\r\n//   };\r\n\r\n//   render() {\r\n//     return (\r\n//       <div className=\"list-content\">\r\n//         <InfiniteScroll\r\n//           initialLoad={false}\r\n//           pageStart={0}\r\n//           loadMore={this.handleInfiniteOnLoad}\r\n//           hasMore={!this.state.loading && this.state.hasMore}\r\n//           useWindow={false}\r\n//         >\r\n//           <List\r\n//             dataSource={this.state.data}\r\n//             renderItem={item => (\r\n//               <List.Item key={item.id}>\r\n//                 <List.Item.Meta\r\n//                   avatar={\r\n//                     <Avatar src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\" />\r\n//                   }\r\n//                   title={<a href=\"https://ant.design\">{item.name}</a>}\r\n//                   description={item.email}\r\n//                 />\r\n//                 <div>Content</div>\r\n//               </List.Item>\r\n//             )}\r\n//           >\r\n//             {this.state.loading && this.state.hasMore && (\r\n//               <div className=\"loading-content\">\r\n//                 <Spin />\r\n//               </div>\r\n//             )}\r\n//           </List>\r\n//         </InfiniteScroll>\r\n//       </div>\r\n//     );\r\n//   }\r\n// }\r\n"]},"metadata":{},"sourceType":"module"}