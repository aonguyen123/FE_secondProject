{"ast":null,"code":"var _jsxFileName = \"E:\\\\web_ungdung\\\\frontend\\\\src\\\\components\\\\NoticeView\\\\NoticeList\\\\NoticeList.js\";\nimport React from 'react';\nimport { Avatar, List, Skeleton } from 'antd';\nimport './styles.css';\nexport default function NoticeList({\n  data = [],\n  onClick,\n  onClear,\n  title,\n  onViewMore,\n  emptyText,\n  showClear = true,\n  clearText,\n  viewMoreText,\n  showViewMore = false,\n  loading\n}) {\n  if (data.length === 0 && !loading) {\n    return React.createElement(\"div\", {\n      className: \"notFound\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: \"https://gw.alipayobjects.com/zos/rmsportal/sAuJeJzSKbUmHfBQRzmZ.svg\",\n      alt: \"not found\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, emptyText));\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(List, {\n    className: \"list\",\n    dataSource: data,\n    loading: loading,\n    renderItem: (item, i) => {\n      const leftIcon = item.avatar ? typeof item.avatar === 'string' ? React.createElement(Avatar, {\n        className: \"avatar\",\n        src: item.avatar,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }) : React.createElement(\"span\", {\n        className: \"iconElement\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, item.avatar) : null;\n      return React.createElement(List.Item, {\n        //className={itemCls}\n        key: item.key || i,\n        onClick: () => onClick && onClick(item),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(List.Item.Meta, {\n        className: \"meta\",\n        avatar: leftIcon,\n        title: React.createElement(\"div\", {\n          className: \"title\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54\n          },\n          __self: this\n        }, item.title),\n        description: React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"description\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58\n          },\n          __self: this\n        }, item.description), React.createElement(\"div\", {\n          className: \"datetime\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61\n          },\n          __self: this\n        }, item.datetime)),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"bottomBar\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, showClear ? React.createElement(\"div\", {\n    onClick: onClear,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, clearText, \" \", title) : null, showViewMore ? React.createElement(\"div\", {\n    onClick: e => {\n      if (onViewMore) {\n        onViewMore(e);\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, viewMoreText) : null));\n}","map":{"version":3,"sources":["E:/web_ungdung/frontend/src/components/NoticeView/NoticeList/NoticeList.js"],"names":["React","Avatar","List","Skeleton","NoticeList","data","onClick","onClear","title","onViewMore","emptyText","showClear","clearText","viewMoreText","showViewMore","loading","length","item","i","leftIcon","avatar","key","description","datetime","e"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Avatar, List, Skeleton } from 'antd';\r\nimport './styles.css';\r\n\r\nexport default function NoticeList({\r\n    data = [],\r\n    onClick,\r\n    onClear,\r\n    title,\r\n    onViewMore,\r\n    emptyText,\r\n    showClear = true,\r\n    clearText,\r\n    viewMoreText,\r\n    showViewMore = false,\r\n    loading\r\n}) {\r\n    if (data.length === 0 && !loading) {\r\n        return (\r\n            <div className=\"notFound\">\r\n                <img\r\n                    src=\"https://gw.alipayobjects.com/zos/rmsportal/sAuJeJzSKbUmHfBQRzmZ.svg\"\r\n                    alt=\"not found\"\r\n                />\r\n                <div>{emptyText}</div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <List\r\n                className=\"list\"\r\n                dataSource={data}\r\n                loading={loading}\r\n                renderItem={(item, i) => {\r\n                    const leftIcon = item.avatar ? (\r\n                        typeof item.avatar === 'string' ? (\r\n                            <Avatar className=\"avatar\" src={item.avatar} />\r\n                        ) : (\r\n                            <span className=\"iconElement\">{item.avatar}</span>\r\n                        )\r\n                    ) : null;\r\n                    return (\r\n                        <List.Item\r\n                            //className={itemCls}\r\n                            key={item.key || i}\r\n                            onClick={() => onClick && onClick(item)}\r\n                        >\r\n                            <List.Item.Meta\r\n                                className=\"meta\"\r\n                                avatar={leftIcon}\r\n                                title={\r\n                                    <div className=\"title\">{item.title}</div>\r\n                                }\r\n                                description={\r\n                                    <div>\r\n                                        <div className=\"description\">\r\n                                            {item.description}\r\n                                        </div>\r\n                                        <div className=\"datetime\">\r\n                                            {item.datetime}\r\n                                        </div>\r\n                                    </div>\r\n                                }\r\n                            />\r\n                        </List.Item>\r\n                    );\r\n                }}\r\n            />\r\n            <div className=\"bottomBar\">\r\n                {showClear ? (\r\n                    <div onClick={onClear}>\r\n                        {clearText} {title}\r\n                    </div>\r\n                ) : null}\r\n                {showViewMore ? (\r\n                    <div\r\n                        onClick={e => {\r\n                            if (onViewMore) {\r\n                                onViewMore(e);\r\n                            }\r\n                        }}\r\n                    >\r\n                        {viewMoreText}\r\n                    </div>\r\n                ) : null}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}