{"ast":null,"code":"var _jsxFileName = \"E:\\\\react-antd\\\\frontend\\\\src\\\\views\\\\Setting\\\\components\\\\FormSettingView\\\\FormSettingView.js\";\nimport React from 'react';\nimport { Form, Input, Row, Col, Select } from 'antd';\nconst {\n  Item\n} = Form;\nconst {\n  TextArea\n} = Input;\nconst {\n  Option\n} = Select;\n\nfunction FormSetting(props) {\n  const {\n    getFieldDecorator,\n    validateFieldsAndScroll\n  } = props.form;\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    validateFieldsAndScroll((err, values) => {\n      if (!err) {\n        console.log('Received values of form: ', values);\n      }\n    });\n  };\n\n  const prefixSelector = getFieldDecorator('prefix', {\n    initialValue: '87'\n  });\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(Col, {\n    xl: 15,\n    lg: 15,\n    md: 15,\n    sm: 24,\n    xs: 24,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(Form, {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(Item, {\n    label: \"Email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, getFieldDecorator('email', {\n    rules: [{\n      required: true,\n      message: 'Please input your email'\n    }]\n  })(React.createElement(Input, {\n    placeholder: \"Please input your email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }))), React.createElement(Item, {\n    label: \"Nickname\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, getFieldDecorator('nickname', {\n    rules: [{\n      required: true,\n      message: 'Please input your nickname'\n    }]\n  })(React.createElement(Input, {\n    placeholder: \"Please input your nickname\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }))), React.createElement(Item, {\n    label: \"Personal profile\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, getFieldDecorator('personalProfile')(React.createElement(TextArea, {\n    rows: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }))), React.createElement(Item, {\n    label: \"Phone Number\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, getFieldDecorator('phone', {\n    rules: [{\n      required: true,\n      message: 'Please input your phone number!'\n    }]\n  })(React.createElement(Input, {\n    addonBefore: prefixSelector,\n    style: {\n      width: '100%'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  })))))));\n}\n\nconst FormSettingViews = Form.create({\n  name: 'form-settings-account'\n})(FormSetting);\nexport default FormSettingViews;","map":{"version":3,"sources":["E:/react-antd/frontend/src/views/Setting/components/FormSettingView/FormSettingView.js"],"names":["React","Form","Input","Row","Col","Select","Item","TextArea","Option","FormSetting","props","getFieldDecorator","validateFieldsAndScroll","form","handleSubmit","e","preventDefault","err","values","console","log","prefixSelector","initialValue","rules","required","message","width","FormSettingViews","create","name"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Form, Input, Row, Col, Select } from 'antd';\r\nconst { Item } = Form;\r\nconst { TextArea } = Input;\r\nconst { Option } = Select;\r\n\r\nfunction FormSetting(props) {\r\n    const { getFieldDecorator, validateFieldsAndScroll } = props.form;\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        validateFieldsAndScroll((err, values) => {\r\n            if (!err) {\r\n                console.log('Received values of form: ', values);\r\n            }\r\n        });\r\n    };\r\n    const prefixSelector = getFieldDecorator('prefix', {\r\n        initialValue: '87'\r\n    });\r\n\r\n    return (\r\n        <div>\r\n            <Row>\r\n                <Col xl={15} lg={15} md={15} sm={24} xs={24}>\r\n                    <Form onSubmit={handleSubmit}>\r\n                        <Item label=\"Email\">\r\n                            {getFieldDecorator('email', {\r\n                                rules: [\r\n                                    {\r\n                                        required: true,\r\n                                        message: 'Please input your email'\r\n                                    }\r\n                                ]\r\n                            })(<Input placeholder=\"Please input your email\" />)}\r\n                        </Item>\r\n                        <Item label=\"Nickname\">\r\n                            {getFieldDecorator('nickname', {\r\n                                rules: [\r\n                                    {\r\n                                        required: true,\r\n                                        message: 'Please input your nickname'\r\n                                    }\r\n                                ]\r\n                            })(\r\n                                <Input placeholder=\"Please input your nickname\" />\r\n                            )}\r\n                        </Item>\r\n                        <Item label=\"Personal profile\">\r\n                            {getFieldDecorator('personalProfile')(\r\n                                <TextArea rows={3} />\r\n                            )}\r\n                        </Item>\r\n                        <Item label=\"Phone Number\">\r\n                            {getFieldDecorator('phone', {\r\n                                rules: [\r\n                                    {\r\n                                        required: true,\r\n                                        message:\r\n                                            'Please input your phone number!'\r\n                                    }\r\n                                ]\r\n                            })(\r\n                                <Input\r\n                                    addonBefore={prefixSelector}\r\n                                    style={{ width: '100%' }}\r\n                                />\r\n                            )}\r\n                        </Item>\r\n                    </Form>\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst FormSettingViews = Form.create({ name: 'form-settings-account' })(\r\n    FormSetting\r\n);\r\nexport default FormSettingViews;\r\n"]},"metadata":{},"sourceType":"module"}