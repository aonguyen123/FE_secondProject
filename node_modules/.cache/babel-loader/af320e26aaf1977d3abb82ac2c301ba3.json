{"ast":null,"code":"import { GET_CURRENT_PLACE, GET_ERRORS } from './../constants/types';\nimport { callAPI, getAccessToken } from './../common';\n\nconst getCurrentPlace = async (lat, lon) => {\n  const result = await getAccessToken(history);\n\n  if (result) {\n    callAPI(`/weather/get-geocode?latitude=${lat}&longitude=${lon}`).then(res => {\n      return {\n        type: GET_CURRENT_PLACE,\n        payload: res.data\n      };\n    }).catch(err => {\n      return {\n        type: GET_ERRORS,\n        payload: err.response.data\n      };\n    });\n  }\n};\n\nexport default {\n  getCurrentPlace\n};","map":{"version":3,"sources":["E:/react-antd/frontend/src/actions/geocode.action.js"],"names":["GET_CURRENT_PLACE","GET_ERRORS","callAPI","getAccessToken","getCurrentPlace","lat","lon","result","history","then","res","type","payload","data","catch","err","response"],"mappings":"AAAA,SAASA,iBAAT,EAA4BC,UAA5B,QAA8C,sBAA9C;AACA,SAASC,OAAT,EAAkBC,cAAlB,QAAwC,aAAxC;;AAEA,MAAMC,eAAe,GAAG,OAAOC,GAAP,EAAYC,GAAZ,KAAoB;AACxC,QAAMC,MAAM,GAAG,MAAMJ,cAAc,CAACK,OAAD,CAAnC;;AACA,MAAGD,MAAH,EACA;AACIL,IAAAA,OAAO,CAAE,iCAAgCG,GAAI,cAAaC,GAAI,EAAvD,CAAP,CACKG,IADL,CACUC,GAAG,IAAI;AACT,aAAO;AACHC,QAAAA,IAAI,EAAEX,iBADH;AAEHY,QAAAA,OAAO,EAAEF,GAAG,CAACG;AAFV,OAAP;AAIH,KANL,EAOKC,KAPL,CAOWC,GAAG,IAAI;AACV,aAAO;AACHJ,QAAAA,IAAI,EAAEV,UADH;AAEHW,QAAAA,OAAO,EAAEG,GAAG,CAACC,QAAJ,CAAaH;AAFnB,OAAP;AAIH,KAZL;AAaH;AACJ,CAlBD;;AAoBA,eAAe;AACXT,EAAAA;AADW,CAAf","sourcesContent":["import { GET_CURRENT_PLACE, GET_ERRORS } from './../constants/types';\r\nimport { callAPI, getAccessToken } from './../common';\r\n\r\nconst getCurrentPlace = async (lat, lon) => {\r\n    const result = await getAccessToken(history);\r\n    if(result)\r\n    {\r\n        callAPI(`/weather/get-geocode?latitude=${lat}&longitude=${lon}`)\r\n            .then(res => {\r\n                return {\r\n                    type: GET_CURRENT_PLACE,\r\n                    payload: res.data\r\n                };\r\n            })\r\n            .catch(err => {\r\n                return {\r\n                    type: GET_ERRORS,\r\n                    payload: err.response.data\r\n                }\r\n            });\r\n    }\r\n}\r\n\r\nexport default {\r\n    getCurrentPlace\r\n};"]},"metadata":{},"sourceType":"module"}