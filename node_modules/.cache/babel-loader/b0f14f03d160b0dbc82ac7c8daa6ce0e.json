{"ast":null,"code":"function _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest();\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) {\n    return;\n  }\n\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nimport React, { useRef, useState } from 'react';\nimport classNames from 'classnames';\nimport ResizeObserver from 'rc-resize-observer';\nimport { debounce } from '../utils/utils';\nimport { defaultRenderLogoAndTitle } from '../SiderMenu/SiderMenu';\nimport './index.less';\nimport BaseMenu from '../SiderMenu/BaseMenu';\n\nvar TopNavHeader = function TopNavHeader(props) {\n  var ref = useRef(null);\n  var theme = props.theme,\n      onMenuHeaderClick = props.onMenuHeaderClick,\n      contentWidth = props.contentWidth,\n      rightContentRender = props.rightContentRender,\n      propsClassName = props.className,\n      style = props.style;\n  var baseClassName = 'ant-pro-top-nav-header';\n  var headerDom = defaultRenderLogoAndTitle(props);\n  var className = classNames(baseClassName, propsClassName, {\n    light: theme === 'light'\n  });\n\n  var _useState = useState('auto'),\n      _useState2 = _slicedToArray(_useState, 2),\n      rightSize = _useState2[0],\n      setRightSize = _useState2[1];\n\n  return React.createElement(\"div\", {\n    className: className,\n    style: style\n  }, React.createElement(\"div\", {\n    ref: ref,\n    className: \"\".concat(baseClassName, \"-main \").concat(contentWidth === 'Fixed' ? 'wide' : '')\n  }, headerDom && React.createElement(\"div\", {\n    className: \"\".concat(baseClassName, \"-left\"),\n    onClick: onMenuHeaderClick\n  }, React.createElement(\"div\", {\n    className: \"\".concat(baseClassName, \"-logo\"),\n    key: \"logo\",\n    id: \"logo\"\n  }, headerDom)), React.createElement(\"div\", {\n    style: {\n      flex: 1,\n      overflow: 'hidden'\n    },\n    className: \"\".concat(baseClassName, \"-menu\")\n  }, React.createElement(BaseMenu, Object.assign({}, props, props.menuProps))), rightContentRender && React.createElement(\"div\", {\n    style: {\n      minWidth: rightSize\n    }\n  }, React.createElement(ResizeObserver, {\n    onResize: debounce(function (_ref) {\n      var width = _ref.width;\n\n      if (!width) {\n        return;\n      }\n\n      setRightSize(width);\n    }, 200)\n  }, React.createElement(\"div\", {\n    style: {\n      paddingRight: 8\n    }\n  }, rightContentRender(Object.assign({}, props)))))));\n};\n\nexport default TopNavHeader;","map":null,"metadata":{},"sourceType":"module"}