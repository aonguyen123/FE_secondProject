{"ast":null,"code":"var _jsxFileName = \"E:\\\\react-antd\\\\frontend\\\\src\\\\views\\\\Setting\\\\Setting.js\";\nimport React, { useState } from 'react';\nimport { GridContent } from '@ant-design/pro-layout';\nimport { Menu } from 'antd';\nimport './styles.css';\nconst {\n  Item\n} = Menu;\nconst menuMap = {\n  base: 'base',\n  security: 'sejhajnd',\n  binding: 'abihans',\n  notification: 'sasas'\n};\nexport default function Setting() {\n  const [selectKey, setSelectKey] = useState('base');\n  const [mode, setMode] = useState('inline');\n\n  const getMenu = () => {\n    return Object.keys(menuMap).map(item => React.createElement(Item, {\n      key: item,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, menuMap[item]));\n  };\n\n  const getRightTitle = () => {\n    return menuMap[selectKey];\n  };\n\n  return React.createElement(GridContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"main\",\n    ref: ref => {\n      if (ref) {\n        this.main = ref;\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"leftMenu\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(Menu, {\n    mode: mode,\n    selectedKeys: [selectKey],\n    onClick: ({\n      key\n    }) => selectKey(key),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, getMenu())), React.createElement(\"div\", {\n    className: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, getRightTitle()), renderChildren())));\n}","map":{"version":3,"sources":["E:/react-antd/frontend/src/views/Setting/Setting.js"],"names":["React","useState","GridContent","Menu","Item","menuMap","base","security","binding","notification","Setting","selectKey","setSelectKey","mode","setMode","getMenu","Object","keys","map","item","getRightTitle","ref","main","key","renderChildren"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,QAA4B,wBAA5B;AACA,SAASC,IAAT,QAAqB,MAArB;AACA,OAAO,cAAP;AAEA,MAAM;AAAEC,EAAAA;AAAF,IAAWD,IAAjB;AACA,MAAME,OAAO,GAAG;AACZC,EAAAA,IAAI,EAAE,MADM;AAEZC,EAAAA,QAAQ,EAAE,UAFE;AAGZC,EAAAA,OAAO,EAAE,SAHG;AAIZC,EAAAA,YAAY,EAAE;AAJF,CAAhB;AAOA,eAAe,SAASC,OAAT,GAAmB;AAC9B,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BX,QAAQ,CAAC,MAAD,CAA1C;AACA,QAAM,CAACY,IAAD,EAAOC,OAAP,IAAkBb,QAAQ,CAAC,QAAD,CAAhC;;AAEA,QAAMc,OAAO,GAAG,MAAM;AAClB,WAAOC,MAAM,CAACC,IAAP,CAAYZ,OAAZ,EAAqBa,GAArB,CAAyBC,IAAI,IAChC,oBAAC,IAAD;AAAM,MAAA,GAAG,EAAEA,IAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAkBd,OAAO,CAACc,IAAD,CAAzB,CADG,CAAP;AAGH,GAJD;;AAKA,QAAMC,aAAa,GAAG,MAAM;AACxB,WAAOf,OAAO,CAACM,SAAD,CAAd;AACH,GAFD;;AAIA,SACI,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AACI,IAAA,SAAS,EAAC,MADd;AAEI,IAAA,GAAG,EAAEU,GAAG,IAAI;AACR,UAAIA,GAAJ,EAAS;AACL,aAAKC,IAAL,GAAYD,GAAZ;AACH;AACJ,KANL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQI;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AACI,IAAA,IAAI,EAAER,IADV;AAEI,IAAA,YAAY,EAAE,CAACF,SAAD,CAFlB;AAGI,IAAA,OAAO,EAAE,CAAC;AAAEY,MAAAA;AAAF,KAAD,KAAaZ,SAAS,CAACY,GAAD,CAHnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKKR,OAAO,EALZ,CADJ,CARJ,EAiBI;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAwBK,aAAa,EAArC,CADJ,EAEKI,cAAc,EAFnB,CAjBJ,CADJ,CADJ;AA0BH","sourcesContent":["import React, { useState } from 'react';\r\nimport { GridContent } from '@ant-design/pro-layout';\r\nimport { Menu } from 'antd';\r\nimport './styles.css';\r\n\r\nconst { Item } = Menu;\r\nconst menuMap = {\r\n    base: 'base',\r\n    security: 'sejhajnd',\r\n    binding: 'abihans',\r\n    notification: 'sasas'\r\n};\r\n\r\nexport default function Setting() {\r\n    const [selectKey, setSelectKey] = useState('base');\r\n    const [mode, setMode] = useState('inline');\r\n\r\n    const getMenu = () => {\r\n        return Object.keys(menuMap).map(item => (\r\n            <Item key={item}>{menuMap[item]}</Item>\r\n        ));\r\n    };\r\n    const getRightTitle = () => {\r\n        return menuMap[selectKey];\r\n    };\r\n\r\n    return (\r\n        <GridContent>\r\n            <div\r\n                className=\"main\"\r\n                ref={ref => {\r\n                    if (ref) {\r\n                        this.main = ref;\r\n                    }\r\n                }}\r\n            >\r\n                <div className=\"leftMenu\">\r\n                    <Menu\r\n                        mode={mode}\r\n                        selectedKeys={[selectKey]}\r\n                        onClick={({ key }) => selectKey(key)}\r\n                    >\r\n                        {getMenu()}\r\n                    </Menu>\r\n                </div>\r\n                <div className=\"right\">\r\n                    <div className=\"title\">{getRightTitle()}</div>\r\n                    {renderChildren()}\r\n                </div>\r\n            </div>\r\n        </GridContent>\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}