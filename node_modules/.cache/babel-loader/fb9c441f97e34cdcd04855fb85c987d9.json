{"ast":null,"code":"var _jsxFileName = \"E:\\\\react-antd\\\\frontend\\\\src\\\\views\\\\Setting\\\\Setting.js\";\nimport React, { useState, useEffect } from 'react';\nimport { GridContent } from '@ant-design/pro-layout';\nimport { Menu } from 'antd';\nimport './styles.css';\nconst {\n  Item\n} = Menu;\nconst menuMap = {\n  base: 'Basic Settings',\n  security: 'Security Settings',\n  notification: 'Message Notification'\n};\nexport default function Setting() {\n  const [selectKey, setSelectKey] = useState('base');\n  const [mode, setMode] = useState('inline');\n  let main = undefined;\n  useEffect(() => {\n    window.addEventListener('resize', resize);\n    resize();\n    return () => {\n      window.removeEventListener('resize', resize);\n    };\n  });\n\n  const getMenu = () => {\n    return Object.keys(menuMap).map(item => React.createElement(Item, {\n      key: item,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, menuMap[item]));\n  };\n\n  const getRightTitle = () => {\n    return menuMap[selectKey];\n  };\n\n  const renderChildren = () => {\n    switch (selectKey) {\n      case 'base':\n        return React.createElement(\"h1\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 38\n          },\n          __self: this\n        }, \"base\");\n\n      case 'security':\n        return React.createElement(\"h1\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41\n          },\n          __self: this\n        }, \"security\");\n\n      case 'notification':\n        return React.createElement(\"h1\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44\n          },\n          __self: this\n        }, \"notification\");\n\n      default:\n        break;\n    }\n\n    return null;\n  };\n\n  const selectedKey = key => {\n    setSelectKey(key);\n  };\n\n  const resize = () => {\n    if (!main) {\n      return;\n    }\n\n    requestAnimationFrame(() => {\n      if (!main) {\n        return;\n      }\n\n      let mode = 'inline';\n      const {\n        offsetWidth\n      } = main;\n\n      if (main.offsetWidth < 641 && offsetWidth > 400) {\n        mode = 'horizontal';\n      }\n\n      if (window.innerWidth < 768 && offsetWidth > 400) {\n        mode = 'horizontal';\n      }\n\n      setMode(mode);\n    });\n  };\n\n  return React.createElement(GridContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"main\",\n    ref: ref => {\n      if (ref) {\n        main = ref;\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"leftMenu-account\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, React.createElement(Menu, {\n    mode: mode,\n    selectedKeys: [selectKey],\n    onClick: ({\n      key\n    }) => selectedKey(key),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, getMenu())), React.createElement(\"div\", {\n    className: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, getRightTitle()), renderChildren())));\n}","map":{"version":3,"sources":["E:/react-antd/frontend/src/views/Setting/Setting.js"],"names":["React","useState","useEffect","GridContent","Menu","Item","menuMap","base","security","notification","Setting","selectKey","setSelectKey","mode","setMode","main","undefined","window","addEventListener","resize","removeEventListener","getMenu","Object","keys","map","item","getRightTitle","renderChildren","selectedKey","key","requestAnimationFrame","offsetWidth","innerWidth","ref"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { GridContent } from '@ant-design/pro-layout';\r\nimport { Menu } from 'antd';\r\nimport './styles.css';\r\n\r\nconst { Item } = Menu;\r\nconst menuMap = {\r\n    base: 'Basic Settings',\r\n    security: 'Security Settings',\r\n    notification: 'Message Notification'\r\n};\r\n\r\nexport default function Setting() {\r\n    const [selectKey, setSelectKey] = useState('base');\r\n    const [mode, setMode] = useState('inline');\r\n    let main = undefined;\r\n\r\n    useEffect(() => {\r\n        window.addEventListener('resize', resize);\r\n        resize();\r\n\r\n        return () => {\r\n            window.removeEventListener('resize', resize);\r\n        }\r\n    })\r\n\r\n    const getMenu = () => {\r\n        return Object.keys(menuMap).map(item => (\r\n            <Item key={item}>{menuMap[item]}</Item>\r\n        ));\r\n    };\r\n    const getRightTitle = () => {\r\n        return menuMap[selectKey];\r\n    };\r\n    const renderChildren = () => {\r\n        switch (selectKey) {\r\n            case 'base':\r\n                return <h1>base</h1>;\r\n\r\n            case 'security':\r\n                return <h1>security</h1>;\r\n\r\n            case 'notification':\r\n                return <h1>notification</h1>;\r\n\r\n            default:\r\n                break;\r\n        }\r\n        return null;\r\n    };\r\n    const selectedKey = key => {\r\n        setSelectKey(key);\r\n    };\r\n    const resize = () => {\r\n        if (!main) {\r\n            return;\r\n        }\r\n        requestAnimationFrame(() => {\r\n            if (!main) {\r\n                return;\r\n            }\r\n            let mode = 'inline';\r\n            const { offsetWidth } = main;\r\n\r\n            if (main.offsetWidth < 641 && offsetWidth > 400) {\r\n                mode = 'horizontal';\r\n            }\r\n\r\n            if (window.innerWidth < 768 && offsetWidth > 400) {\r\n                mode = 'horizontal';\r\n            }\r\n            setMode(mode);\r\n        });\r\n    };\r\n\r\n    return (\r\n        <GridContent>\r\n            <div\r\n                className=\"main\"\r\n                ref={ref => {\r\n                    if (ref) {\r\n                        main = ref;\r\n                    }\r\n                }}\r\n            >\r\n                <div className=\"leftMenu-account\">\r\n                    <Menu\r\n                        mode={mode}\r\n                        selectedKeys={[selectKey]}\r\n                        onClick={({ key }) => selectedKey(key)}\r\n                    >\r\n                        {getMenu()}\r\n                    </Menu>\r\n                </div>\r\n                <div className=\"right\">\r\n                    <div className=\"title\">{getRightTitle()}</div>\r\n                    {renderChildren()}\r\n                </div>\r\n            </div>\r\n        </GridContent>\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}