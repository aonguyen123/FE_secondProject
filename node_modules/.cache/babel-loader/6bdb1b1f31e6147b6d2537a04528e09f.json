{"ast":null,"code":"import \"antd/es/menu/style\";\nimport _Menu from \"antd/es/menu\";\nimport \"antd/es/layout/style\";\nimport _Layout from \"antd/es/layout\";\nimport React from 'react';\nimport classNames from 'classnames';\nimport './index.less';\nimport BaseMenu from './BaseMenu';\nimport MenuCounter from './Counter';\nvar Sider = _Layout.Sider;\nexport var defaultRenderLogo = function defaultRenderLogo(logo) {\n  if (typeof logo === 'string') {\n    return React.createElement(\"img\", {\n      src: logo,\n      alt: \"logo\"\n    });\n  }\n\n  if (typeof logo === 'function') {\n    return logo();\n  }\n\n  return logo;\n};\nexport var defaultRenderLogoAndTitle = function defaultRenderLogoAndTitle(props) {\n  var _props$logo = props.logo,\n      logo = _props$logo === void 0 ? 'https://gw.alipayobjects.com/zos/antfincdn/PmY%24TNNDBI/logo.svg' : _props$logo,\n      title = props.title,\n      menuHeaderRender = props.menuHeaderRender;\n\n  if (menuHeaderRender === false) {\n    return null;\n  }\n\n  var logoDom = defaultRenderLogo(logo);\n  var titleDom = React.createElement(\"h1\", null, title);\n\n  if (menuHeaderRender) {\n    // when collapsed, no render title\n    return menuHeaderRender(logoDom, props.collapsed ? null : titleDom, props);\n  }\n\n  return React.createElement(\"a\", {\n    href: \"/\"\n  }, logoDom, props.collapsed ? null : titleDom);\n};\n\nvar SiderMenu = function SiderMenu(props) {\n  var collapsed = props.collapsed,\n      fixSiderbar = props.fixSiderbar,\n      _onCollapse = props.onCollapse,\n      theme = props.theme,\n      _props$siderWidth = props.siderWidth,\n      siderWidth = _props$siderWidth === void 0 ? 256 : _props$siderWidth,\n      isMobile = props.isMobile,\n      onMenuHeaderClick = props.onMenuHeaderClick,\n      _props$breakpoint = props.breakpoint,\n      breakpoint = _props$breakpoint === void 0 ? 'lg' : _props$breakpoint,\n      style = props.style,\n      links = props.links,\n      onOpenChange = props.onOpenChange;\n\n  var _MenuCounter$useConta = MenuCounter.useContainer(),\n      flatMenus = _MenuCounter$useConta.flatMenus;\n\n  var siderClassName = classNames('ant-pro-sider-menu-sider', {\n    'fix-sider-bar': fixSiderbar,\n    light: theme === 'light'\n  });\n  var headerDom = defaultRenderLogoAndTitle(props);\n  return React.createElement(Sider, {\n    collapsible: true,\n    trigger: null,\n    collapsed: collapsed,\n    breakpoint: breakpoint === false ? undefined : breakpoint,\n    onCollapse: function onCollapse(collapse) {\n      if (!isMobile) {\n        if (_onCollapse) {\n          _onCollapse(collapse);\n        }\n      }\n    },\n    style: style,\n    width: siderWidth,\n    theme: theme,\n    className: siderClassName\n  }, headerDom && React.createElement(\"div\", {\n    className: \"ant-pro-sider-menu-logo\",\n    onClick: onMenuHeaderClick,\n    id: \"logo\"\n  }, headerDom), flatMenus && React.createElement(BaseMenu, Object.assign({}, props, {\n    mode: \"inline\",\n    handleOpenChange: onOpenChange,\n    style: {\n      padding: '16px 0',\n      width: '100%'\n    }\n  })), links && links.length > 0 && React.createElement(\"div\", {\n    className: \"ant-pro-sider-menu-links\"\n  }, React.createElement(_Menu, {\n    theme: theme,\n    className: \"ant-pro-sider-menu-link-menu\",\n    selectedKeys: [],\n    openKeys: [],\n    mode: \"inline\"\n  }, (links || []).map(function (node, index) {\n    return (// eslint-disable-next-line react/no-array-index-key\n      React.createElement(_Menu.Item, {\n        key: index\n      }, node)\n    );\n  }))));\n};\n\nexport default SiderMenu;","map":null,"metadata":{},"sourceType":"module"}