{"ast":null,"code":"var _jsxFileName = \"E:\\\\web_ungdung\\\\frontend\\\\src\\\\components\\\\NoticeView\\\\NoticeList\\\\NoticeList.js\";\nimport React from 'react';\nimport { Avatar, List } from 'antd';\nimport './styles.css';\nexport default function NoticeList({\n  data = [],\n  onClick,\n  onClear,\n  title,\n  onViewMore,\n  emptyText,\n  showClear = true,\n  clearText,\n  viewMoreText,\n  showViewMore = false\n}) {\n  if (data.length === 0) {\n    return React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, \"sss\");\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(List, {\n    className: \"list\",\n    dataSource: data,\n    renderItem: (item, i) => {\n      console.log(item);\n      const leftIcon = item.avatar ? typeof item.avatar === 'string' ? React.createElement(Avatar, {\n        className: \"avatar\",\n        src: item.avatar,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }) : React.createElement(\"span\", {\n        className: \"iconElement\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, item.avatar) : null;\n      return React.createElement(List.Item, {\n        //className={itemCls}\n        key: item.key || i,\n        onClick: () => onClick && onClick(item),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(List.Item.Meta, {\n        className: \"meta\",\n        avatar: leftIcon,\n        title: React.createElement(\"div\", {\n          className: \"title\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53\n          },\n          __self: this\n        }, item.title, React.createElement(\"div\", {\n          className: \"extra\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55\n          },\n          __self: this\n        }, item.extra)),\n        description: React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"description\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62\n          },\n          __self: this\n        }, item.description), React.createElement(\"div\", {\n          className: \"datetime\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65\n          },\n          __self: this\n        }, item.datetime)),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"bottomBar\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, showClear ? React.createElement(\"div\", {\n    onClick: onClear,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, clearText, \" \", title) : null, showViewMore ? React.createElement(\"div\", {\n    onClick: e => {\n      if (onViewMore) {\n        onViewMore(e);\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, viewMoreText) : null));\n}\n;","map":{"version":3,"sources":["E:/web_ungdung/frontend/src/components/NoticeView/NoticeList/NoticeList.js"],"names":["React","Avatar","List","NoticeList","data","onClick","onClear","title","onViewMore","emptyText","showClear","clearText","viewMoreText","showViewMore","length","item","i","console","log","leftIcon","avatar","key","extra","description","datetime","e"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Avatar, List } from 'antd';\r\nimport './styles.css';\r\n\r\nexport default function NoticeList({\r\n    data = [],\r\n    onClick,\r\n    onClear,\r\n    title,\r\n    onViewMore,\r\n    emptyText,\r\n    showClear = true,\r\n    clearText,\r\n    viewMoreText,\r\n    showViewMore = false\r\n}) {\r\n    if (data.length === 0) {\r\n        return (\r\n            <h1>sss</h1>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <List\r\n                className='list'\r\n                dataSource={data}\r\n                renderItem={(item, i) => {\r\n                    console.log(item)\r\n                    \r\n                    const leftIcon = item.avatar ? (\r\n                        typeof item.avatar === 'string' ? (\r\n                            <Avatar\r\n                                className='avatar'\r\n                                src={item.avatar}\r\n                            />\r\n                        ) : (\r\n                            <span className='iconElement'>\r\n                                {item.avatar}\r\n                            </span>\r\n                        )\r\n                    ) : null;\r\n                    return (\r\n                        <List.Item\r\n                            //className={itemCls}\r\n                            key={item.key || i}\r\n                            onClick={() => onClick && onClick(item)}\r\n                        >\r\n                            <List.Item.Meta\r\n                                className='meta'\r\n                                avatar={leftIcon}\r\n                                title={\r\n                                    <div className='title'>\r\n                                        {item.title}\r\n                                        <div className='extra'>\r\n                                            {item.extra}\r\n                                        </div>\r\n                                    </div>\r\n                                }\r\n                                description={\r\n                                    <div>\r\n                                        <div className='description'>\r\n                                            {item.description}\r\n                                        </div>\r\n                                        <div className='datetime'>\r\n                                            {item.datetime}\r\n                                        </div>\r\n                                    </div>\r\n                                }\r\n                            />\r\n                        </List.Item>\r\n                    );\r\n                }}\r\n            />\r\n            <div className='bottomBar'>\r\n                {showClear ? (\r\n                    <div onClick={onClear}>\r\n                        {clearText} {title}\r\n                    </div>\r\n                ) : null}\r\n                {showViewMore ? (\r\n                    <div\r\n                        onClick={e => {\r\n                            if (onViewMore) {\r\n                                onViewMore(e);\r\n                            }\r\n                        }}\r\n                    >\r\n                        {viewMoreText}\r\n                    </div>\r\n                ) : null}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}