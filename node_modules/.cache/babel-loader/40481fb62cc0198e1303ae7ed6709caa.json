{"ast":null,"code":"import \"antd/es/layout/style\";\nimport _Layout from \"antd/es/layout\";\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest();\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) {\n    return;\n  }\n\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport './BasicLayout.less';\nimport React, { useContext, useEffect } from 'react';\nimport { Helmet } from 'react-helmet';\nimport classNames from 'classnames';\nimport warning from 'warning';\nimport useMergeValue from 'use-merge-value';\nimport useAntdMediaQuery from 'use-media-antd-query';\nimport Omit from 'omit.js';\nimport Header from './Header';\nimport { getPageTitleInfo } from './getPageTitle';\nimport defaultSettings from './defaultSettings';\nimport getLocales from './locales';\nimport Footer from './Footer';\nimport RouteContext from './RouteContext';\nimport SiderMenu from './SiderMenu';\nimport { getBreadcrumbProps } from './utils/getBreadcrumbProps';\nimport getMenuData from './utils/getMenuData';\nimport { isBrowser, useDeepCompareEffect } from './utils/utils';\nimport PageLoading from './PageLoading';\nimport MenuCounter from './SiderMenu/Counter';\nimport WrapContent from './WrapContent';\n\nvar headerRender = function headerRender(props) {\n  if (props.headerRender === false) {\n    return null;\n  }\n\n  return React.createElement(Header, Object.assign({}, props));\n};\n\nvar footerRender = function footerRender(props) {\n  if (props.footerRender === false) {\n    return null;\n  }\n\n  if (props.footerRender) {\n    return props.footerRender(Object.assign({}, props), React.createElement(Footer, null));\n  }\n\n  return null;\n};\n\nvar renderSiderMenu = function renderSiderMenu(props) {\n  var layout = props.layout,\n      isMobile = props.isMobile,\n      menuRender = props.menuRender;\n\n  if (props.menuRender === false) {\n    return null;\n  }\n\n  if (layout === 'topmenu' && !isMobile) {\n    return React.createElement(SiderMenu, Object.assign({}, props, {\n      hide: true\n    }));\n  }\n\n  if (menuRender) {\n    return menuRender(props, React.createElement(SiderMenu, Object.assign({}, props)));\n  }\n\n  return React.createElement(SiderMenu, Object.assign({}, props));\n};\n\nvar defaultPageTitleRender = function defaultPageTitleRender(pageProps, props) {\n  var pageTitleRender = props.pageTitleRender;\n  var pageTitleInfo = getPageTitleInfo(pageProps);\n\n  if (pageTitleRender === false) {\n    return {\n      title: props.title || '',\n      id: '',\n      pageName: ''\n    };\n  }\n\n  if (pageTitleRender) {\n    var title = pageTitleRender(pageProps, pageTitleInfo.title, pageTitleInfo);\n\n    if (typeof title === 'string') {\n      return Object.assign(Object.assign({}, pageTitleInfo), {\n        title: title\n      });\n    }\n\n    warning(typeof title === 'string', 'pro-layout: renderPageTitle return value should be a string');\n  }\n\n  return pageTitleInfo;\n};\n\nvar getPaddingLeft = function getPaddingLeft(hasLeftPadding, collapsed, siderWidth) {\n  if (hasLeftPadding) {\n    return collapsed ? 80 : siderWidth;\n  }\n\n  return undefined;\n};\n/**\n * 🌃 Powerful and easy to use beautiful layout\n * 🏄‍ Support multiple topics and layout types\n * @param props\n */\n\n\nvar BasicLayout = function BasicLayout(props) {\n  var _classNames;\n\n  var children = props.children,\n      propsOnCollapse = props.onCollapse,\n      _props$location = props.location,\n      location = _props$location === void 0 ? {\n    pathname: '/'\n  } : _props$location,\n      fixSiderbar = props.fixSiderbar,\n      navTheme = props.navTheme,\n      contentStyle = props.contentStyle,\n      PropsLayout = props.layout,\n      _props$route = props.route,\n      route = _props$route === void 0 ? {\n    routes: []\n  } : _props$route,\n      style = props.style,\n      disableContentMargin = props.disableContentMargin,\n      _props$siderWidth = props.siderWidth,\n      siderWidth = _props$siderWidth === void 0 ? 256 : _props$siderWidth,\n      menu = props.menu,\n      propsIsChildrenLayout = props.isChildrenLayout,\n      menuDataRender = props.menuDataRender,\n      loading = props.loading;\n\n  var formatMessage = function formatMessage(_a) {\n    var id = _a.id,\n        defaultMessage = _a.defaultMessage,\n        rest = __rest(_a, [\"id\", \"defaultMessage\"]);\n\n    if (props.formatMessage) {\n      return props.formatMessage(Object.assign({\n        id: id,\n        defaultMessage: defaultMessage\n      }, rest));\n    }\n\n    var locales = getLocales();\n\n    if (locales[id]) {\n      return locales[id];\n    }\n\n    if (defaultMessage) {\n      return defaultMessage;\n    }\n\n    return id;\n  };\n\n  var colSize = useAntdMediaQuery();\n  var _route$routes = route.routes,\n      routes = _route$routes === void 0 ? [] : _route$routes;\n\n  var _useMergeValue = useMergeValue(function () {\n    return getMenuData(routes, menu, formatMessage, menuDataRender);\n  }),\n      _useMergeValue2 = _slicedToArray(_useMergeValue, 2),\n      menuInfoData = _useMergeValue2[0],\n      setMenuInfoData = _useMergeValue2[1];\n\n  var renderMenuInfoData = {}; // 如果menuDataRender 存在，就应该每次都render一下，不然无法保证数据的同步\n\n  if (menuDataRender) {\n    renderMenuInfoData = getMenuData(routes, menu, formatMessage, menuDataRender);\n  }\n\n  var isMobile = (colSize === 'sm' || colSize === 'xs') && !props.disableMobile;\n\n  var _ref = !menuDataRender ? menuInfoData : renderMenuInfoData,\n      _ref$breadcrumb = _ref.breadcrumb,\n      breadcrumb = _ref$breadcrumb === void 0 ? {} : _ref$breadcrumb,\n      breadcrumbMap = _ref.breadcrumbMap,\n      _ref$menuData = _ref.menuData,\n      menuData = _ref$menuData === void 0 ? [] : _ref$menuData;\n  /**\n   *  如果 menuRender 不存在，可以做一下性能优化\n   *  只要 routers 没有更新就不需要重新计算\n   */\n\n\n  useDeepCompareEffect(function () {\n    if (!menuDataRender) {\n      var infoData = getMenuData(routes, menu, formatMessage, menuDataRender); // 稍微慢一点 render，不然会造成性能问题，看起来像是菜单的卡顿\n\n      var animationFrameId = requestAnimationFrame(function () {\n        setMenuInfoData(infoData);\n      });\n      return function () {\n        return window.cancelAnimationFrame && window.cancelAnimationFrame(animationFrameId);\n      };\n    }\n\n    return function () {\n      return null;\n    };\n  }, [props.route, JSON.stringify(menu)]); // If it is a fix menu, calculate padding\n  // don't need padding in phone mode\n\n  var hasLeftPadding = fixSiderbar && PropsLayout !== 'topmenu' && !isMobile;\n\n  var _useMergeValue3 = useMergeValue(false, {\n    value: props.collapsed,\n    onChange: propsOnCollapse\n  }),\n      _useMergeValue4 = _slicedToArray(_useMergeValue3, 2),\n      collapsed = _useMergeValue4[0],\n      onCollapse = _useMergeValue4[1]; // Splicing parameters, adding menuData and formatMessage in props\n\n\n  var defaultProps = Omit(Object.assign(Object.assign({}, props), {\n    formatMessage: formatMessage,\n    breadcrumb: breadcrumb\n  }), ['className', 'style']); // gen page title\n\n  var pageTitleInfo = defaultPageTitleRender(Object.assign(Object.assign({\n    pathname: location.pathname\n  }, defaultProps), {\n    breadcrumbMap: breadcrumbMap\n  }), props); // gen breadcrumbProps, parameter for pageHeader\n\n  var breadcrumbProps = getBreadcrumbProps(Object.assign(Object.assign({}, defaultProps), {\n    breadcrumbMap: breadcrumbMap\n  })); // render sider dom\n\n  var siderMenuDom = renderSiderMenu(Object.assign(Object.assign({}, defaultProps), {\n    menuData: menuData,\n    onCollapse: onCollapse,\n    isMobile: isMobile,\n    theme: (navTheme || 'dark').toLocaleLowerCase().includes('dark') ? 'dark' : 'light',\n    collapsed: collapsed\n  })); // render header dom\n\n  var headerDom = headerRender(Object.assign(Object.assign({}, defaultProps), {\n    hasSiderMenu: !!siderMenuDom,\n    menuData: menuData,\n    isMobile: isMobile,\n    collapsed: collapsed,\n    onCollapse: onCollapse,\n    theme: (navTheme || 'dark').toLocaleLowerCase().includes('dark') ? 'dark' : 'light'\n  })); // render footer dom\n\n  var footerDom = footerRender(Object.assign({\n    isMobile: isMobile,\n    collapsed: collapsed\n  }, defaultProps));\n\n  var _useContext = useContext(RouteContext),\n      contextIsChildrenLayout = _useContext.isChildrenLayout; // 如果 props 中定义，以 props 为准\n\n\n  var isChildrenLayout = propsIsChildrenLayout !== undefined ? propsIsChildrenLayout : contextIsChildrenLayout; // gen className\n\n  var className = classNames(props.className, 'ant-design-pro', 'ant-pro-basicLayout', (_classNames = {}, _defineProperty(_classNames, \"screen-\".concat(colSize), colSize), _defineProperty(_classNames, 'ant-pro-basicLayout-topmenu', PropsLayout === 'topmenu'), _defineProperty(_classNames, 'ant-pro-basicLayout-is-children', isChildrenLayout), _defineProperty(_classNames, 'ant-pro-basicLayout-fix-siderbar', fixSiderbar), _defineProperty(_classNames, 'ant-pro-basicLayout-mobile', isMobile), _classNames)); // siderMenuDom 为空的时候，不需要 padding\n\n  var genLayoutStyle = {\n    paddingLeft: siderMenuDom ? getPaddingLeft(!!hasLeftPadding, collapsed, siderWidth) : undefined,\n    position: 'relative'\n  }; // if is some layout children，don't need min height\n\n  if (isChildrenLayout || contentStyle && contentStyle.minHeight) {\n    genLayoutStyle.minHeight = 0;\n  }\n\n  var contentClassName = classNames('ant-pro-basicLayout-content', {\n    'ant-pro-basicLayout-has-header': headerDom,\n    'ant-pro-basicLayout-content-disable-margin': disableContentMargin\n  }); // warning info\n\n  useEffect(function () {\n    warning(props.collapsed === undefined === (props.onCollapse === undefined), 'pro-layout: onCollapse and collapsed should exist simultaneously');\n  }, []);\n  return React.createElement(React.Fragment, null, React.createElement(Helmet, null, React.createElement(\"title\", null, pageTitleInfo.title)), React.createElement(MenuCounter.Provider, null, React.createElement(\"div\", {\n    className: className\n  }, React.createElement(_Layout, {\n    style: Object.assign({\n      minHeight: '100%'\n    }, style),\n    hasSider: true\n  }, siderMenuDom, React.createElement(_Layout, {\n    style: genLayoutStyle\n  }, headerDom, React.createElement(RouteContext.Provider, {\n    value: Object.assign(Object.assign({}, defaultProps), {\n      breadcrumb: breadcrumbProps,\n      menuData: menuData,\n      isMobile: isMobile,\n      collapsed: collapsed,\n      isChildrenLayout: true,\n      title: pageTitleInfo.pageName\n    })\n  }, React.createElement(WrapContent, {\n    className: contentClassName,\n    style: contentStyle,\n    isChildrenLayout: isChildrenLayout\n  }, loading ? React.createElement(PageLoading, null) : children)), footerDom)))));\n};\n\nBasicLayout.defaultProps = Object.assign(Object.assign({\n  logo: 'https://gw.alipayobjects.com/zos/antfincdn/PmY%24TNNDBI/logo.svg'\n}, defaultSettings), {\n  location: isBrowser() ? window.location : undefined\n});\nexport default BasicLayout;","map":null,"metadata":{},"sourceType":"module"}