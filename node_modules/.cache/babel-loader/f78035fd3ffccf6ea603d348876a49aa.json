{"ast":null,"code":"var _jsxFileName = \"E:\\\\react-antd\\\\frontend\\\\src\\\\views\\\\Home\\\\Components\\\\ToolWeather\\\\ToolWeather.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Card, Icon, Result } from 'antd';\nimport { ChartCard, MiniArea } from 'ant-design-pro/lib/Charts';\nimport NumberInfo from 'ant-design-pro/lib/NumberInfo';\nimport moment from 'moment';\nexport default function ToolWeather(props) {\n  const {\n    geocode,\n    errors\n  } = props;\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    geocode && setLoading(false);\n  }, [geocode]);\n  const visitData = [];\n  const beginDay = new Date().getTime();\n\n  for (let i = 0; i < 20; i += 1) {\n    visitData.push({\n      x: moment(new Date(beginDay + 1000 * 60 * 60 * 24 * i)).format('YYYY-MM-DD'),\n      y: Math.floor(Math.random() * 100) + 10\n    });\n  }\n\n  return React.createElement(Result, {\n    icon: React.createElement(Icon, {\n      type: \"close\",\n      theme: \"twoTone\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }),\n    title: \"Great, we have done all the operations!\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }) // <Card size=\"small\" loading={loading} title=\"Today weather\" style={{ height: '100%' }}>\n  //     <Card.Meta\n  //         description=\"Weather\"\n  //         title={geocode}\n  //         avatar={<Icon type=\"cloud\" style={{ fontSize: '20px' }} />}\n  //     />\n  //     <ChartCard\n  //         title=\"搜索用户数量\"\n  //         total={8846}\n  //         contentHeight={163}\n  //         bordered={false}\n  //     >\n  //         <NumberInfo\n  //             subTitle={<span>本周访问</span>}\n  //             total={12321}\n  //             status=\"up\"\n  //             subTotal={17.1}\n  //         />\n  //         <MiniArea line height={45} data={visitData} />\n  //     </ChartCard>\n  // </Card>\n  ;\n}","map":{"version":3,"sources":["E:/react-antd/frontend/src/views/Home/Components/ToolWeather/ToolWeather.js"],"names":["React","useState","useEffect","Card","Icon","Result","ChartCard","MiniArea","NumberInfo","moment","ToolWeather","props","geocode","errors","loading","setLoading","visitData","beginDay","Date","getTime","i","push","x","format","y","Math","floor","random"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,IAAT,EAAeC,IAAf,EAAqBC,MAArB,QAAmC,MAAnC;AACA,SACIC,SADJ,EAEIC,QAFJ,QAGO,2BAHP;AAIA,OAAOC,UAAP,MAAuB,+BAAvB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AAEA,eAAe,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AACvC,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA;AAAX,MAAsBF,KAA5B;AACA,QAAM,CAACG,OAAD,EAAUC,UAAV,IAAwBd,QAAQ,CAAC,IAAD,CAAtC;AACAC,EAAAA,SAAS,CAAC,MAAM;AACZU,IAAAA,OAAO,IAAIG,UAAU,CAAC,KAAD,CAArB;AACH,GAFQ,EAEN,CAACH,OAAD,CAFM,CAAT;AAIA,QAAMI,SAAS,GAAG,EAAlB;AACA,QAAMC,QAAQ,GAAG,IAAIC,IAAJ,GAAWC,OAAX,EAAjB;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,EAApB,EAAwBA,CAAC,IAAI,CAA7B,EAAgC;AAC5BJ,IAAAA,SAAS,CAACK,IAAV,CAAe;AACXC,MAAAA,CAAC,EAAEb,MAAM,CAAC,IAAIS,IAAJ,CAASD,QAAQ,GAAG,OAAO,EAAP,GAAY,EAAZ,GAAiB,EAAjB,GAAsBG,CAA1C,CAAD,CAAN,CAAqDG,MAArD,CACC,YADD,CADQ;AAIXC,MAAAA,CAAC,EAAEC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,GAA3B,IAAkC;AAJ1B,KAAf;AAMH;;AAED,SACI,oBAAC,MAAD;AACI,IAAA,IAAI,EAAE,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAC,OAAX;AAAmB,MAAA,KAAK,EAAC,SAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADV;AAEI,IAAA,KAAK,EAAC,yCAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAKI;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA1BJ;AA4BH","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Card, Icon, Result } from 'antd';\r\nimport {\r\n    ChartCard,\r\n    MiniArea,\r\n} from 'ant-design-pro/lib/Charts';\r\nimport NumberInfo from 'ant-design-pro/lib/NumberInfo';\r\nimport moment from 'moment';\r\n\r\nexport default function ToolWeather(props) {\r\n    const { geocode, errors } = props;\r\n    const [loading, setLoading] = useState(true);\r\n    useEffect(() => {\r\n        geocode && setLoading(false)\r\n    }, [geocode]);\r\n\r\n    const visitData = [];\r\n    const beginDay = new Date().getTime();\r\n    for (let i = 0; i < 20; i += 1) {\r\n        visitData.push({\r\n            x: moment(new Date(beginDay + 1000 * 60 * 60 * 24 * i)).format(\r\n                'YYYY-MM-DD'\r\n            ),\r\n            y: Math.floor(Math.random() * 100) + 10\r\n        });\r\n    }\r\n\r\n    return (\r\n        <Result\r\n            icon={<Icon type=\"close\" theme=\"twoTone\" />}\r\n            title=\"Great, we have done all the operations!\"\r\n        />\r\n        // <Card size=\"small\" loading={loading} title=\"Today weather\" style={{ height: '100%' }}>\r\n        //     <Card.Meta\r\n        //         description=\"Weather\"\r\n        //         title={geocode}\r\n        //         avatar={<Icon type=\"cloud\" style={{ fontSize: '20px' }} />}\r\n        //     />\r\n\r\n        //     <ChartCard\r\n        //         title=\"搜索用户数量\"\r\n        //         total={8846}\r\n        //         contentHeight={163}\r\n        //         bordered={false}\r\n        //     >\r\n        //         <NumberInfo\r\n        //             subTitle={<span>本周访问</span>}\r\n        //             total={12321}\r\n        //             status=\"up\"\r\n        //             subTotal={17.1}\r\n        //         />\r\n        //         <MiniArea line height={45} data={visitData} />\r\n        //     </ChartCard>\r\n        // </Card>\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}