{"ast":null,"code":"var _jsxFileName = \"E:\\\\web_ungdung\\\\frontend\\\\src\\\\views\\\\Home\\\\Components\\\\ListContent\\\\ListContent.js\";\nimport React from 'react';\nimport { List, message, Avatar, Spin } from 'antd';\nimport InfiniteScroll from 'react-infinite-scroller';\nconst fakeDataUrl = 'https://randomuser.me/api/?results=5&inc=name,gender,email,nat&noinfo';\nexport default class InfiniteListExample extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      data: [],\n      loading: false,\n      hasMore: true\n    };\n\n    this.handleInfiniteOnLoad = () => {\n      let {\n        data\n      } = this.state;\n      this.setState({\n        loading: true\n      });\n\n      if (data.length > 14) {\n        message.warning('Infinite List loaded all');\n        this.setState({\n          hasMore: false,\n          loading: false\n        });\n        return;\n      }\n\n      this.fetchData(res => {\n        data = data.concat(res.results);\n        this.setState({\n          data,\n          loading: false\n        });\n      });\n    };\n  }\n\n  componentDidMount() {} // this.fetchData(res => {\n  //   this.setState({\n  //     data: res.results,\n  //   });\n  // });\n  //   fetchData = callback => {\n  //     reqwest({\n  //       url: fakeDataUrl,\n  //       type: 'json',\n  //       method: 'get',\n  //       contentType: 'application/json',\n  //       success: res => {\n  //         callback(res);\n  //       },\n  //     });\n  //   };\n\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"demo-infinite-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(InfiniteScroll, {\n      initialLoad: false,\n      pageStart: 0,\n      loadMore: this.handleInfiniteOnLoad,\n      hasMore: !this.state.loading && this.state.hasMore,\n      useWindow: false,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(List, {\n      dataSource: this.state.data,\n      renderItem: item => React.createElement(List.Item, {\n        key: item.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(List.Item.Meta, {\n        avatar: React.createElement(Avatar, {\n          src: \"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73\n          },\n          __self: this\n        }),\n        title: React.createElement(\"a\", {\n          href: \"https://ant.design\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75\n          },\n          __self: this\n        }, item.name.last),\n        description: item.email,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, \"Content\")),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, this.state.loading && this.state.hasMore && React.createElement(\"div\", {\n      className: \"demo-loading-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(Spin, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    })))));\n  }\n\n}","map":{"version":3,"sources":["E:/web_ungdung/frontend/src/views/Home/Components/ListContent/ListContent.js"],"names":["React","List","message","Avatar","Spin","InfiniteScroll","fakeDataUrl","InfiniteListExample","Component","state","data","loading","hasMore","handleInfiniteOnLoad","setState","length","warning","fetchData","res","concat","results","componentDidMount","render","item","id","name","last","email"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { List, message, Avatar, Spin } from 'antd';\r\n\r\nimport InfiniteScroll from 'react-infinite-scroller';\r\n\r\nconst fakeDataUrl = 'https://randomuser.me/api/?results=5&inc=name,gender,email,nat&noinfo';\r\n\r\nexport default class InfiniteListExample extends React.Component {\r\n  state = {\r\n    data: [],\r\n    loading: false,\r\n    hasMore: true,\r\n  };\r\n\r\n  componentDidMount() {\r\n    // this.fetchData(res => {\r\n    //   this.setState({\r\n    //     data: res.results,\r\n    //   });\r\n    // });\r\n  }\r\n\r\n//   fetchData = callback => {\r\n//     reqwest({\r\n//       url: fakeDataUrl,\r\n//       type: 'json',\r\n//       method: 'get',\r\n//       contentType: 'application/json',\r\n//       success: res => {\r\n//         callback(res);\r\n//       },\r\n//     });\r\n//   };\r\n\r\n  handleInfiniteOnLoad = () => {\r\n    let { data } = this.state;\r\n    this.setState({\r\n      loading: true,\r\n    });\r\n    if (data.length > 14) {\r\n      message.warning('Infinite List loaded all');\r\n      this.setState({\r\n        hasMore: false,\r\n        loading: false,\r\n      });\r\n      return;\r\n    }\r\n    this.fetchData(res => {\r\n      data = data.concat(res.results);\r\n      this.setState({\r\n        data,\r\n        loading: false,\r\n      });\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"demo-infinite-container\">\r\n        <InfiniteScroll\r\n          initialLoad={false}\r\n          pageStart={0}\r\n          loadMore={this.handleInfiniteOnLoad}\r\n          hasMore={!this.state.loading && this.state.hasMore}\r\n          useWindow={false}\r\n        >\r\n          <List\r\n            dataSource={this.state.data}\r\n            renderItem={item => (\r\n              <List.Item key={item.id}>\r\n                <List.Item.Meta\r\n                  avatar={\r\n                    <Avatar src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\" />\r\n                  }\r\n                  title={<a href=\"https://ant.design\">{item.name.last}</a>}\r\n                  description={item.email}\r\n                />\r\n                <div>Content</div>\r\n              </List.Item>\r\n            )}\r\n          >\r\n            {this.state.loading && this.state.hasMore && (\r\n              <div className=\"demo-loading-container\">\r\n                <Spin />\r\n              </div>\r\n            )}\r\n          </List>\r\n        </InfiniteScroll>\r\n      </div>\r\n    );\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}