{"ast":null,"code":"import { GET_CURRENT_PLACE, GET_ERRORS, GET_PROVINCES } from './../constants/types';\nimport { callAPI, getAccessToken } from './../common';\nimport axios from 'axios';\n\nconst getCurrentPlace = (lat, lon, history) => async dispatch => {\n  const result = await getAccessToken(history);\n\n  if (result) {\n    callAPI(`/weather/get-geocode?latitude=${lat}&longitude=${lon}`).then(res => {\n      dispatch({\n        type: GET_CURRENT_PLACE,\n        payload: res.data\n      });\n    }).catch(err => {\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      });\n    });\n  }\n};\n\nconst getProvinces = () => async dispatch => {\n  try {\n    axios.get('https://dc.tintoc.net/app/api-customer/public/provinces?size=65').then(res => {\n      dispatch({\n        type: GET_PROVINCES,\n        payload: res.data\n      });\n    }).catch(err => {});\n  } catch (e) {\n    console.log(e);\n  }\n};\n\nexport default {\n  getCurrentPlace,\n  getProvinces\n};","map":{"version":3,"sources":["E:/react-antd/frontend/src/actions/geocode.action.js"],"names":["GET_CURRENT_PLACE","GET_ERRORS","GET_PROVINCES","callAPI","getAccessToken","axios","getCurrentPlace","lat","lon","history","dispatch","result","then","res","type","payload","data","catch","err","response","getProvinces","get","e","console","log"],"mappings":"AAAA,SACIA,iBADJ,EAEIC,UAFJ,EAGIC,aAHJ,QAIO,sBAJP;AAKA,SAASC,OAAT,EAAkBC,cAAlB,QAAwC,aAAxC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,eAAe,GAAG,CAACC,GAAD,EAAMC,GAAN,EAAWC,OAAX,KAAuB,MAAMC,QAAN,IAAkB;AAC7D,QAAMC,MAAM,GAAG,MAAMP,cAAc,CAACK,OAAD,CAAnC;;AACA,MAAIE,MAAJ,EAAY;AACRR,IAAAA,OAAO,CAAE,iCAAgCI,GAAI,cAAaC,GAAI,EAAvD,CAAP,CACKI,IADL,CACUC,GAAG,IAAI;AACTH,MAAAA,QAAQ,CAAC;AACLI,QAAAA,IAAI,EAAEd,iBADD;AAELe,QAAAA,OAAO,EAAEF,GAAG,CAACG;AAFR,OAAD,CAAR;AAIH,KANL,EAOKC,KAPL,CAOWC,GAAG,IAAI;AACVR,MAAAA,QAAQ,CAAC;AACLI,QAAAA,IAAI,EAAEb,UADD;AAELc,QAAAA,OAAO,EAAEG,GAAG,CAACC,QAAJ,CAAaH;AAFjB,OAAD,CAAR;AAIH,KAZL;AAaH;AACJ,CAjBD;;AAkBA,MAAMI,YAAY,GAAG,MAAM,MAAMV,QAAN,IAAkB;AACzC,MAAI;AACAL,IAAAA,KAAK,CACAgB,GADL,CAEQ,iEAFR,EAIKT,IAJL,CAIUC,GAAG,IAAI;AACTH,MAAAA,QAAQ,CAAC;AACLI,QAAAA,IAAI,EAAEZ,aADD;AAELa,QAAAA,OAAO,EAAEF,GAAG,CAACG;AAFR,OAAD,CAAR;AAIH,KATL,EAUKC,KAVL,CAUWC,GAAG,IAAI,CAEb,CAZL;AAaH,GAdD,CAeA,OAAMI,CAAN,EACA;AACIC,IAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACH;AACJ,CApBD;;AAsBA,eAAe;AACXhB,EAAAA,eADW;AAEXc,EAAAA;AAFW,CAAf","sourcesContent":["import {\r\n    GET_CURRENT_PLACE,\r\n    GET_ERRORS,\r\n    GET_PROVINCES\r\n} from './../constants/types';\r\nimport { callAPI, getAccessToken } from './../common';\r\nimport axios from 'axios';\r\n\r\nconst getCurrentPlace = (lat, lon, history) => async dispatch => {\r\n    const result = await getAccessToken(history);\r\n    if (result) {\r\n        callAPI(`/weather/get-geocode?latitude=${lat}&longitude=${lon}`)\r\n            .then(res => {\r\n                dispatch({\r\n                    type: GET_CURRENT_PLACE,\r\n                    payload: res.data\r\n                });\r\n            })\r\n            .catch(err => {\r\n                dispatch({\r\n                    type: GET_ERRORS,\r\n                    payload: err.response.data\r\n                });\r\n            });\r\n    }\r\n};\r\nconst getProvinces = () => async dispatch => {\r\n    try {\r\n        axios\r\n            .get(\r\n                'https://dc.tintoc.net/app/api-customer/public/provinces?size=65'\r\n            )\r\n            .then(res => {\r\n                dispatch({\r\n                    type: GET_PROVINCES,\r\n                    payload: res.data\r\n                });\r\n            })\r\n            .catch(err => {\r\n               \r\n            });\r\n    }\r\n    catch(e)\r\n    {\r\n        console.log(e)\r\n    }\r\n};\r\n\r\nexport default {\r\n    getCurrentPlace,\r\n    getProvinces\r\n};\r\n"]},"metadata":{},"sourceType":"module"}