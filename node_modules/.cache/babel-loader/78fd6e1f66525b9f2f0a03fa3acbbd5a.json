{"ast":null,"code":"var _jsxFileName = \"E:\\\\react-antd\\\\frontend\\\\src\\\\views\\\\Setting\\\\components\\\\GeographicView\\\\GeographicView.js\";\nimport React, { forwardRef, useState } from 'react';\nimport { Spin, Select } from 'antd';\nimport './styles.css';\nconst {\n  Option\n} = Select;\nconst nullSelectItem = {\n  label: '',\n  key: ''\n};\nconst GeographicView = forwardRef((props, ref) => {\n  const [loading, setLoading] = useState(true);\n\n  const getProvinceOption = () => {// const { province } = this.props;\n    // if (province) {\n    //     return getOption(province);\n    // }\n    // return [];\n  };\n\n  const getCityOption = () => {// const { city } = this.props;\n    // if (city) {\n    //     return getOption(city);\n    // }\n    // return [];\n  };\n\n  const getOption = list => {\n    if (!list || list.length < 1) {\n      return React.createElement(Option, {\n        key: 0,\n        value: 0,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, \"\\u6CA1\\u6709\\u627E\\u5230\\u9009\\u9879\");\n    }\n\n    return list.map(item => React.createElement(Option, {\n      key: item.id,\n      value: item.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, item.name));\n  };\n\n  const selectProvinceItem = item => {\n    const {\n      dispatch,\n      onChange\n    } = props; // if (dispatch) {\n    //     dispatch({\n    //         type: 'accountAndsettings/fetchCity',\n    //         payload: item.key\n    //     });\n    // }\n    // if (onChange) {\n    //     onChange({\n    //         province: item,\n    //         city: nullSelectItem\n    //     });\n    // }\n  };\n\n  const selectCityItem = item => {\n    const {\n      value,\n      onChange\n    } = props; // if (value && onChange) {\n    //     onChange({\n    //         province: value.province,\n    //         city: item\n    //     });\n    // }\n  };\n\n  return React.createElement(Spin, {\n    spinning: loading,\n    wrapperClassName: \"row\",\n    size: \"small\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, React.createElement(Select, {\n    className: \"item\",\n    value: \"province\",\n    labelInValue: true,\n    showSearch: true,\n    onSelect: selectProvinceItem,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, getProvinceOption()), React.createElement(Select, {\n    className: \"item\",\n    value: \"city\",\n    labelInValue: true,\n    showSearch: true,\n    onSelect: selectCityItem,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, getCityOption()));\n});\nexport default GeographicView;","map":{"version":3,"sources":["E:/react-antd/frontend/src/views/Setting/components/GeographicView/GeographicView.js"],"names":["React","forwardRef","useState","Spin","Select","Option","nullSelectItem","label","key","GeographicView","props","ref","loading","setLoading","getProvinceOption","getCityOption","getOption","list","length","map","item","id","name","selectProvinceItem","dispatch","onChange","selectCityItem","value"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,QAA4C,OAA5C;AACA,SAASC,IAAT,EAAeC,MAAf,QAA6B,MAA7B;AACA,OAAO,cAAP;AACA,MAAM;AAAEC,EAAAA;AAAF,IAAaD,MAAnB;AACA,MAAME,cAAc,GAAG;AACnBC,EAAAA,KAAK,EAAE,EADY;AAEnBC,EAAAA,GAAG,EAAE;AAFc,CAAvB;AAKA,MAAMC,cAAc,GAAGR,UAAU,CAAC,CAACS,KAAD,EAAQC,GAAR,KAAgB;AAC9C,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBX,QAAQ,CAAC,IAAD,CAAtC;;AACA,QAAMY,iBAAiB,GAAG,MAAM,CAC5B;AACA;AACA;AACA;AACA;AACH,GAND;;AAOA,QAAMC,aAAa,GAAG,MAAM,CACxB;AACA;AACA;AACA;AACA;AACH,GAND;;AAOA,QAAMC,SAAS,GAAGC,IAAI,IAAI;AACtB,QAAI,CAACA,IAAD,IAASA,IAAI,CAACC,MAAL,GAAc,CAA3B,EAA8B;AAC1B,aACI,oBAAC,MAAD;AAAQ,QAAA,GAAG,EAAE,CAAb;AAAgB,QAAA,KAAK,EAAE,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gDADJ;AAKH;;AACD,WAAOD,IAAI,CAACE,GAAL,CAASC,IAAI,IAChB,oBAAC,MAAD;AAAQ,MAAA,GAAG,EAAEA,IAAI,CAACC,EAAlB;AAAsB,MAAA,KAAK,EAAED,IAAI,CAACC,EAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKD,IAAI,CAACE,IADV,CADG,CAAP;AAKH,GAbD;;AAcA,QAAMC,kBAAkB,GAAGH,IAAI,IAAI;AAC/B,UAAM;AAAEI,MAAAA,QAAF;AAAYC,MAAAA;AAAZ,QAAyBf,KAA/B,CAD+B,CAG/B;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACH,GAhBD;;AAiBA,QAAMgB,cAAc,GAAGN,IAAI,IAAI;AAC3B,UAAM;AAAEO,MAAAA,KAAF;AAASF,MAAAA;AAAT,QAAsBf,KAA5B,CAD2B,CAG3B;AACA;AACA;AACA;AACA;AACA;AACH,GATD;;AAWA,SACI,oBAAC,IAAD;AAAM,IAAA,QAAQ,EAAEE,OAAhB;AAAyB,IAAA,gBAAgB,EAAC,KAA1C;AAAgD,IAAA,IAAI,EAAC,OAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,MAAD;AACI,IAAA,SAAS,EAAC,MADd;AAEI,IAAA,KAAK,EAAC,UAFV;AAGI,IAAA,YAAY,MAHhB;AAII,IAAA,UAAU,MAJd;AAKI,IAAA,QAAQ,EAAEW,kBALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOKT,iBAAiB,EAPtB,CADJ,EAUI,oBAAC,MAAD;AACI,IAAA,SAAS,EAAC,MADd;AAEI,IAAA,KAAK,EAAC,MAFV;AAGI,IAAA,YAAY,MAHhB;AAII,IAAA,UAAU,MAJd;AAKI,IAAA,QAAQ,EAAEY,cALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOKX,aAAa,EAPlB,CAVJ,CADJ;AAsBH,CAhFgC,CAAjC;AAkFA,eAAeN,cAAf","sourcesContent":["import React, { forwardRef, useState } from 'react';\r\nimport { Spin, Select } from 'antd';\r\nimport './styles.css';\r\nconst { Option } = Select;\r\nconst nullSelectItem = {\r\n    label: '',\r\n    key: ''\r\n};\r\n\r\nconst GeographicView = forwardRef((props, ref) => {\r\n    const [loading, setLoading] = useState(true);\r\n    const getProvinceOption = () => {\r\n        // const { province } = this.props;\r\n        // if (province) {\r\n        //     return getOption(province);\r\n        // }\r\n        // return [];\r\n    };\r\n    const getCityOption = () => {\r\n        // const { city } = this.props;\r\n        // if (city) {\r\n        //     return getOption(city);\r\n        // }\r\n        // return [];\r\n    };\r\n    const getOption = list => {\r\n        if (!list || list.length < 1) {\r\n            return (\r\n                <Option key={0} value={0}>\r\n                    没有找到选项\r\n                </Option>\r\n            );\r\n        }\r\n        return list.map(item => (\r\n            <Option key={item.id} value={item.id}>\r\n                {item.name}\r\n            </Option>\r\n        ));\r\n    };\r\n    const selectProvinceItem = item => {\r\n        const { dispatch, onChange } = props;\r\n\r\n        // if (dispatch) {\r\n        //     dispatch({\r\n        //         type: 'accountAndsettings/fetchCity',\r\n        //         payload: item.key\r\n        //     });\r\n        // }\r\n\r\n        // if (onChange) {\r\n        //     onChange({\r\n        //         province: item,\r\n        //         city: nullSelectItem\r\n        //     });\r\n        // }\r\n    };\r\n    const selectCityItem = item => {\r\n        const { value, onChange } = props;\r\n\r\n        // if (value && onChange) {\r\n        //     onChange({\r\n        //         province: value.province,\r\n        //         city: item\r\n        //     });\r\n        // }\r\n    };\r\n\r\n    return (\r\n        <Spin spinning={loading} wrapperClassName='row' size='small'>\r\n            <Select\r\n                className='item'\r\n                value='province'\r\n                labelInValue\r\n                showSearch\r\n                onSelect={selectProvinceItem}\r\n            >\r\n                {getProvinceOption()}\r\n            </Select>\r\n            <Select\r\n                className='item'\r\n                value='city'\r\n                labelInValue\r\n                showSearch\r\n                onSelect={selectCityItem}\r\n            >\r\n                {getCityOption()}\r\n            </Select>\r\n        </Spin>\r\n    );\r\n});\r\n\r\nexport default GeographicView;\r\n"]},"metadata":{},"sourceType":"module"}