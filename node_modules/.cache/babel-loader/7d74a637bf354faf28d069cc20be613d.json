{"ast":null,"code":"import \"antd/es/switch/style\";\nimport _Switch from \"antd/es/switch\";\nimport \"antd/es/select/style\";\nimport _Select from \"antd/es/select\";\nimport \"antd/es/list/style\";\nimport _List from \"antd/es/list\";\nimport \"antd/es/tooltip/style\";\nimport _Tooltip from \"antd/es/tooltip\";\nimport React from 'react';\nimport defaultSettings from '../defaultSettings';\nimport { getFormatMessage } from './index';\nexport var renderLayoutSettingItem = function renderLayoutSettingItem(item) {\n  var action = React.cloneElement(item.action, {\n    disabled: item.disabled\n  });\n  return React.createElement(_Tooltip, {\n    title: item.disabled ? item.disabledReason : '',\n    placement: \"left\"\n  }, React.createElement(_List.Item, {\n    actions: [action]\n  }, React.createElement(\"span\", {\n    style: {\n      opacity: item.disabled ? 0.5 : 1\n    }\n  }, item.title)));\n};\n\nvar LayoutSetting = function LayoutSetting(_ref) {\n  var _ref$settings = _ref.settings,\n      settings = _ref$settings === void 0 ? {} : _ref$settings,\n      changeSetting = _ref.changeSetting;\n  var formatMessage = getFormatMessage();\n\n  var _ref2 = settings || defaultSettings,\n      contentWidth = _ref2.contentWidth,\n      fixedHeader = _ref2.fixedHeader,\n      layout = _ref2.layout,\n      fixSiderbar = _ref2.fixSiderbar;\n\n  return React.createElement(_List, {\n    split: false,\n    dataSource: [{\n      title: formatMessage({\n        id: 'app.setting.content-width',\n        defaultMessage: 'Content Width'\n      }),\n      action: React.createElement(_Select, {\n        value: contentWidth || 'Fixed',\n        size: \"small\",\n        onSelect: function onSelect(value) {\n          return changeSetting('contentWidth', value);\n        },\n        style: {\n          width: 80\n        }\n      }, layout === 'sidemenu' ? null : React.createElement(_Select.Option, {\n        value: \"Fixed\"\n      }, formatMessage({\n        id: 'app.setting.content-width.fixed',\n        defaultMessage: 'Fixed'\n      })), React.createElement(_Select.Option, {\n        value: \"Fluid\"\n      }, formatMessage({\n        id: 'app.setting.content-width.fluid',\n        defaultMessage: 'Fluid'\n      })))\n    }, {\n      title: formatMessage({\n        id: 'app.setting.fixedheader',\n        defaultMessage: 'Fixed Header'\n      }),\n      action: React.createElement(_Switch, {\n        size: \"small\",\n        checked: !!fixedHeader,\n        onChange: function onChange(checked) {\n          return changeSetting('fixedHeader', checked);\n        }\n      })\n    }, {\n      title: formatMessage({\n        id: 'app.setting.fixedsidebar',\n        defaultMessage: 'Fixed Sidebar'\n      }),\n      disabled: layout === 'topmenu',\n      disabledReason: formatMessage({\n        id: 'app.setting.fixedsidebar.hint',\n        defaultMessage: 'Works on Side Menu Layout'\n      }),\n      action: React.createElement(_Switch, {\n        size: \"small\",\n        checked: !!fixSiderbar,\n        onChange: function onChange(checked) {\n          return changeSetting('fixSiderbar', checked);\n        }\n      })\n    }],\n    renderItem: renderLayoutSettingItem\n  });\n};\n\nexport default LayoutSetting;","map":null,"metadata":{},"sourceType":"module"}