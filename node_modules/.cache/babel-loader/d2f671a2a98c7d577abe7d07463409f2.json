{"ast":null,"code":"import \"antd/es/icon/style\";\nimport _Icon from \"antd/es/icon\";\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nimport './index.less';\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport { defaultRenderLogo } from '../SiderMenu/SiderMenu';\nimport { isBrowser } from '../utils/utils';\n\nvar defaultRenderCollapsedButton = function defaultRenderCollapsedButton(collapsed) {\n  return React.createElement(_Icon, {\n    type: collapsed ? 'menu-unfold' : 'menu-fold'\n  });\n};\n\nvar renderLogo = function renderLogo(menuHeaderRender, logoDom) {\n  if (menuHeaderRender === false) {\n    return null;\n  }\n\n  if (menuHeaderRender) {\n    return menuHeaderRender(logoDom, null);\n  }\n\n  return logoDom;\n};\n\nvar GlobalHeader =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(GlobalHeader, _Component);\n\n  function GlobalHeader() {\n    var _this;\n\n    _classCallCheck(this, GlobalHeader);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(GlobalHeader).apply(this, arguments));\n\n    _this.triggerResizeEvent = function () {\n      if (isBrowser()) {\n        var event = document.createEvent('HTMLEvents');\n        event.initEvent('resize', true, false);\n        window.dispatchEvent(event);\n      }\n    };\n\n    _this.toggle = function () {\n      var _this$props = _this.props,\n          collapsed = _this$props.collapsed,\n          onCollapse = _this$props.onCollapse;\n      if (onCollapse) onCollapse(!collapsed);\n\n      _this.triggerResizeEvent();\n    };\n\n    _this.renderCollapsedButton = function () {\n      var _this$props2 = _this.props,\n          collapsed = _this$props2.collapsed,\n          _this$props2$collapse = _this$props2.collapsedButtonRender,\n          collapsedButtonRender = _this$props2$collapse === void 0 ? defaultRenderCollapsedButton : _this$props2$collapse,\n          menuRender = _this$props2.menuRender;\n\n      if (collapsedButtonRender !== false && menuRender !== false) {\n        return React.createElement(\"span\", {\n          className: \"ant-pro-global-header-trigger\",\n          onClick: _this.toggle\n        }, collapsedButtonRender(collapsed));\n      }\n\n      return null;\n    };\n\n    return _this;\n  }\n\n  _createClass(GlobalHeader, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props3 = this.props,\n          isMobile = _this$props3.isMobile,\n          logo = _this$props3.logo,\n          rightContentRender = _this$props3.rightContentRender,\n          menuHeaderRender = _this$props3.menuHeaderRender,\n          propClassName = _this$props3.className,\n          style = _this$props3.style;\n      var className = classNames(propClassName, 'ant-pro-global-header');\n      var logoDom = React.createElement(\"span\", {\n        className: \"ant-pro-global-header-logo\",\n        key: \"logo\"\n      }, defaultRenderLogo(logo));\n      return React.createElement(\"div\", {\n        className: className,\n        style: style\n      }, isMobile && renderLogo(menuHeaderRender, logoDom), this.renderCollapsedButton(), React.createElement(\"div\", {\n        style: {\n          flex: 1\n        }\n      }), rightContentRender && rightContentRender(this.props));\n    }\n  }]);\n\n  return GlobalHeader;\n}(Component);\n\nexport { GlobalHeader as default };","map":null,"metadata":{},"sourceType":"module"}