{"ast":null,"code":"var _jsxFileName = \"E:\\\\web_ungdung\\\\frontend\\\\src\\\\components\\\\SelectLang\\\\SelectLang.js\";\nimport React from 'react';\nimport { GlobalOutlined } from '@ant-design/icons';\nimport { getLocale, setLocale, formatMessage } from 'umi-plugin-react/locale';\nimport { Menu } from 'antd';\nimport { HeaderDropdown } from './../../components';\nimport './styles.css';\nexport default function SelectLang() {\n  const selectedLang = getLocale();\n  console.log(selectedLang);\n\n  const changeLang = ({\n    key\n  }) => setLocale(key);\n\n  const locales = ['vi-VN', 'en-US'];\n  const languageLabels = {\n    'vi-VN': 'Viet Nam',\n    'en-US': 'English'\n  };\n  const languageIcons = {\n    'vi-VN': 'ðŸ‡¨ðŸ‡³',\n    'en-US': 'ðŸ‡ºðŸ‡¸'\n  };\n  const langMenu = React.createElement(Menu, {\n    selectedKeys: [selectedLang],\n    onClick: changeLang,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, locales.map(locale => React.createElement(Menu.Item, {\n    key: locale,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    role: \"img\",\n    \"aria-label\": languageLabels[locale],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, languageIcons[locale]), ' ', languageLabels[locale])));\n  return React.createElement(HeaderDropdown, {\n    overlay: langMenu,\n    placement: \"bottomRight\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"dropDown-lang\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(GlobalOutlined, {\n    title: formatMessage({\n      id: 'globalHeader.lang'\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  })));\n}","map":{"version":3,"sources":["E:/web_ungdung/frontend/src/components/SelectLang/SelectLang.js"],"names":["React","GlobalOutlined","getLocale","setLocale","formatMessage","Menu","HeaderDropdown","SelectLang","selectedLang","console","log","changeLang","key","locales","languageLabels","languageIcons","langMenu","map","locale","id"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,cAAT,QAA+B,mBAA/B;AACA,SAASC,SAAT,EAAoBC,SAApB,EAA+BC,aAA/B,QAAoD,yBAApD;AACA,SAASC,IAAT,QAAqB,MAArB;AACA,SAASC,cAAT,QAA+B,oBAA/B;AACA,OAAO,cAAP;AAEA,eAAe,SAASC,UAAT,GAAsB;AACjC,QAAMC,YAAY,GAAGN,SAAS,EAA9B;AACAO,EAAAA,OAAO,CAACC,GAAR,CAAYF,YAAZ;;AACA,QAAMG,UAAU,GAAG,CAAC;AAAEC,IAAAA;AAAF,GAAD,KAAaT,SAAS,CAACS,GAAD,CAAzC;;AAEA,QAAMC,OAAO,GAAG,CAAC,OAAD,EAAU,OAAV,CAAhB;AACA,QAAMC,cAAc,GAAG;AACnB,aAAS,UADU;AAEnB,aAAS;AAFU,GAAvB;AAIA,QAAMC,aAAa,GAAG;AAClB,aAAS,MADS;AAElB,aAAS;AAFS,GAAtB;AAIA,QAAMC,QAAQ,GACV,oBAAC,IAAD;AAAM,IAAA,YAAY,EAAE,CAACR,YAAD,CAApB;AAAoC,IAAA,OAAO,EAAEG,UAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKE,OAAO,CAACI,GAAR,CAAYC,MAAM,IACf,oBAAC,IAAD,CAAM,IAAN;AAAW,IAAA,GAAG,EAAEA,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAM,IAAA,IAAI,EAAC,KAAX;AAAiB,kBAAYJ,cAAc,CAACI,MAAD,CAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKH,aAAa,CAACG,MAAD,CADlB,CADJ,EAGY,GAHZ,EAIKJ,cAAc,CAACI,MAAD,CAJnB,CADH,CADL,CADJ;AAaA,SACI,oBAAC,cAAD;AAAgB,IAAA,OAAO,EAAEF,QAAzB;AAAmC,IAAA,SAAS,EAAC,aAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAM,IAAA,SAAS,EAAC,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,cAAD;AAAgB,IAAA,KAAK,EAAEZ,aAAa,CAAC;AAACe,MAAAA,EAAE,EAAE;AAAL,KAAD,CAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,CADJ;AAOH","sourcesContent":["import React from 'react';\r\nimport { GlobalOutlined } from '@ant-design/icons';\r\nimport { getLocale, setLocale, formatMessage } from 'umi-plugin-react/locale';\r\nimport { Menu } from 'antd';\r\nimport { HeaderDropdown } from './../../components';\r\nimport './styles.css';\r\n\r\nexport default function SelectLang() {\r\n    const selectedLang = getLocale();\r\n    console.log(selectedLang)\r\n    const changeLang = ({ key }) => setLocale(key);\r\n\r\n    const locales = ['vi-VN', 'en-US'];\r\n    const languageLabels = {\r\n        'vi-VN': 'Viet Nam',\r\n        'en-US': 'English',\r\n    };\r\n    const languageIcons = {\r\n        'vi-VN': 'ðŸ‡¨ðŸ‡³',\r\n        'en-US': 'ðŸ‡ºðŸ‡¸',\r\n    };\r\n    const langMenu = (\r\n        <Menu selectedKeys={[selectedLang]} onClick={changeLang}>\r\n            {locales.map(locale => (\r\n                <Menu.Item key={locale}>\r\n                    <span role=\"img\" aria-label={languageLabels[locale]}>\r\n                        {languageIcons[locale]}\r\n                    </span>{' '}\r\n                    {languageLabels[locale]}\r\n                </Menu.Item>\r\n            ))}\r\n        </Menu>\r\n    );\r\n\r\n    return (\r\n        <HeaderDropdown overlay={langMenu} placement=\"bottomRight\">\r\n            <span className='dropDown-lang'>\r\n                <GlobalOutlined title={formatMessage({id: 'globalHeader.lang'})} />\r\n            </span>\r\n        </HeaderDropdown>\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}