{"ast":null,"code":"var _jsxFileName = \"E:\\\\react-antd\\\\frontend\\\\src\\\\views\\\\Home\\\\Components\\\\ToolPost\\\\ToolPost.js\";\nimport React, { useState } from 'react';\nimport { PageHeader, Icon, Tag, Row, Card, Form, Input, Col, Mentions } from 'antd';\nimport UploadImage from './../UploadImage';\nconst {\n  Option\n} = Mentions;\nconst MOCK_DATA = {\n  '@': ['afc163', 'zombiej', 'yesmeck'],\n  '#': ['1.0', '2.0', '3.0']\n};\nexport default function ToolPost() {\n  const [loading, setLoading] = useState(false);\n  const [users, setUsers] = useState([]);\n  const [search, setSearch] = useState('');\n\n  const onSearch = search => {\n    setSearch(search);\n    setLoading(!!search);\n    setUsers([]);\n    console.log('Search:', search);\n    loadGithubUsers(search);\n  };\n\n  const loadGithubUsers = key => {\n    if (!key) {\n      setUsers([]);\n      return;\n    }\n\n    fetch(`https://api.github.com/search/users?q=${key}`).then(res => res.json()).then(({\n      items = []\n    }) => {\n      //const { search } = this.state;\n      if (search !== key) return;\n      setUsers(items.slice(0, 10));\n      setLoading(false);\n    });\n  };\n\n  const content = React.createElement(Col, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(Form, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(Form.Item, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(Mentions, {\n    style: {\n      width: '100%'\n    },\n    placeholder: \"input @ to mention people, # to mention tag\",\n    loading: loading,\n    onSearch: onSearch,\n    rows: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, users.map(({\n    login,\n    avatar_url: avatar\n  }) => React.createElement(Option, {\n    key: login,\n    value: login,\n    className: \"antd-demo-dynamic-option\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: avatar,\n    alt: login,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, login))))), React.createElement(Form.Item, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, React.createElement(UploadImage, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }))));\n\n  const Content = ({\n    children\n  }) => {\n    return React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, children);\n  };\n\n  return React.createElement(Card, {\n    title: \"Create Post\",\n    size: \"small\",\n    actions: [React.createElement(Icon, {\n      title: \"post\",\n      type: \"edit\",\n      key: \"edit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    })],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, React.createElement(PageHeader, {\n    title: \"Ao Nguyen\",\n    tags: React.createElement(Tag, {\n      color: \"blue\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, \"Online\"),\n    avatar: {\n      src: 'https://avatars1.githubusercontent.com/u/8186664?s=460&v=4'\n    },\n    style: {\n      margin: '0px',\n      padding: '0px'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, React.createElement(Content, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, content)));\n}","map":{"version":3,"sources":["E:/react-antd/frontend/src/views/Home/Components/ToolPost/ToolPost.js"],"names":["React","useState","PageHeader","Icon","Tag","Row","Card","Form","Input","Col","Mentions","UploadImage","Option","MOCK_DATA","ToolPost","loading","setLoading","users","setUsers","search","setSearch","onSearch","console","log","loadGithubUsers","key","fetch","then","res","json","items","slice","content","width","map","login","avatar_url","avatar","Content","children","src","margin","padding"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SACIC,UADJ,EAEIC,IAFJ,EAGIC,GAHJ,EAIIC,GAJJ,EAKIC,IALJ,EAMIC,IANJ,EAOIC,KAPJ,EAQIC,GARJ,EASIC,QATJ,QAUO,MAVP;AAWA,OAAOC,WAAP,MAAwB,kBAAxB;AAEA,MAAM;AAAEC,EAAAA;AAAF,IAAaF,QAAnB;AACA,MAAMG,SAAS,GAAG;AACd,OAAK,CAAC,QAAD,EAAW,SAAX,EAAsB,SAAtB,CADS;AAEd,OAAK,CAAC,KAAD,EAAQ,KAAR,EAAe,KAAf;AAFS,CAAlB;AAKA,eAAe,SAASC,QAAT,GAAoB;AAC/B,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBf,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACgB,KAAD,EAAQC,QAAR,IAAoBjB,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACkB,MAAD,EAASC,SAAT,IAAsBnB,QAAQ,CAAC,EAAD,CAApC;;AAEA,QAAMoB,QAAQ,GAAGF,MAAM,IAAI;AACvBC,IAAAA,SAAS,CAACD,MAAD,CAAT;AACAH,IAAAA,UAAU,CAAC,CAAC,CAACG,MAAH,CAAV;AACAD,IAAAA,QAAQ,CAAC,EAAD,CAAR;AAEAI,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBJ,MAAvB;AACAK,IAAAA,eAAe,CAACL,MAAD,CAAf;AACH,GAPD;;AAQA,QAAMK,eAAe,GAAGC,GAAG,IAAI;AAC3B,QAAI,CAACA,GAAL,EAAU;AACNP,MAAAA,QAAQ,CAAC,EAAD,CAAR;AACA;AACH;;AAEDQ,IAAAA,KAAK,CAAE,yCAAwCD,GAAI,EAA9C,CAAL,CACKE,IADL,CACUC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADjB,EAEKF,IAFL,CAEU,CAAC;AAAEG,MAAAA,KAAK,GAAG;AAAV,KAAD,KAAoB;AACtB;AACA,UAAIX,MAAM,KAAKM,GAAf,EAAoB;AAEpBP,MAAAA,QAAQ,CAACY,KAAK,CAACC,KAAN,CAAY,CAAZ,EAAe,EAAf,CAAD,CAAR;AACAf,MAAAA,UAAU,CAAC,KAAD,CAAV;AACH,KARL;AASH,GAfD;;AAiBA,QAAMgB,OAAO,GACT,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,QAAD;AACI,IAAA,KAAK,EAAE;AAAEC,MAAAA,KAAK,EAAE;AAAT,KADX;AAEI,IAAA,WAAW,EAAC,6CAFhB;AAGI,IAAA,OAAO,EAAElB,OAHb;AAII,IAAA,QAAQ,EAAEM,QAJd;AAKI,IAAA,IAAI,EAAE,CALV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOKJ,KAAK,CAACiB,GAAN,CAAU,CAAC;AAAEC,IAAAA,KAAF;AAASC,IAAAA,UAAU,EAAEC;AAArB,GAAD,KACP,oBAAC,MAAD;AACI,IAAA,GAAG,EAAEF,KADT;AAEI,IAAA,KAAK,EAAEA,KAFX;AAGI,IAAA,SAAS,EAAC,0BAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKI;AAAK,IAAA,GAAG,EAAEE,MAAV;AAAkB,IAAA,GAAG,EAAEF,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALJ,EAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOA,KAAP,CANJ,CADH,CAPL,CADJ,CADJ,EAqBI,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CArBJ,CADJ,CADJ;;AA8BA,QAAMG,OAAO,GAAG,CAAC;AAAEC,IAAAA;AAAF,GAAD,KAAkB;AAC9B,WAAO,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAMA,QAAN,CAAP;AACH,GAFD;;AAIA,SACI,oBAAC,IAAD;AACI,IAAA,KAAK,EAAC,aADV;AAEI,IAAA,IAAI,EAAC,OAFT;AAGI,IAAA,OAAO,EAAE,CAAC,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAC,MAAZ;AAAmB,MAAA,IAAI,EAAC,MAAxB;AAA+B,MAAA,GAAG,EAAC,MAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAD,CAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKI,oBAAC,UAAD;AACI,IAAA,KAAK,EAAC,WADV;AAEI,IAAA,IAAI,EAAE,oBAAC,GAAD;AAAK,MAAA,KAAK,EAAC,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFV;AAGI,IAAA,MAAM,EAAE;AACJC,MAAAA,GAAG,EACC;AAFA,KAHZ;AAOI,IAAA,KAAK,EAAE;AAAEC,MAAAA,MAAM,EAAE,KAAV;AAAiBC,MAAAA,OAAO,EAAE;AAA1B,KAPX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KASI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAUV,OAAV,CATJ,CALJ,CADJ;AAmBH","sourcesContent":["import React, { useState } from 'react';\r\nimport {\r\n    PageHeader,\r\n    Icon,\r\n    Tag,\r\n    Row,\r\n    Card,\r\n    Form,\r\n    Input,\r\n    Col,\r\n    Mentions\r\n} from 'antd';\r\nimport UploadImage from './../UploadImage';\r\n\r\nconst { Option } = Mentions;\r\nconst MOCK_DATA = {\r\n    '@': ['afc163', 'zombiej', 'yesmeck'],\r\n    '#': ['1.0', '2.0', '3.0']\r\n};\r\n\r\nexport default function ToolPost() {\r\n    const [loading, setLoading] = useState(false);\r\n    const [users, setUsers] = useState([]);\r\n    const [search, setSearch] = useState('');\r\n\r\n    const onSearch = search => {\r\n        setSearch(search);\r\n        setLoading(!!search);\r\n        setUsers([]);\r\n\r\n        console.log('Search:', search);\r\n        loadGithubUsers(search);\r\n    };\r\n    const loadGithubUsers = key => {\r\n        if (!key) {\r\n            setUsers([]);\r\n            return;\r\n        }\r\n\r\n        fetch(`https://api.github.com/search/users?q=${key}`)\r\n            .then(res => res.json())\r\n            .then(({ items = [] }) => {\r\n                //const { search } = this.state;\r\n                if (search !== key) return;\r\n\r\n                setUsers(items.slice(0, 10));\r\n                setLoading(false);\r\n            });\r\n    };\r\n\r\n    const content = (\r\n        <Col>\r\n            <Form>\r\n                <Form.Item>\r\n                    <Mentions\r\n                        style={{ width: '100%' }}\r\n                        placeholder=\"input @ to mention people, # to mention tag\"\r\n                        loading={loading}\r\n                        onSearch={onSearch}\r\n                        rows={3}\r\n                    >\r\n                        {users.map(({ login, avatar_url: avatar }) => (\r\n                            <Option\r\n                                key={login}\r\n                                value={login}\r\n                                className=\"antd-demo-dynamic-option\"\r\n                            >\r\n                                <img src={avatar} alt={login} />\r\n                                <span>{login}</span>\r\n                            </Option>\r\n                        ))}\r\n                    </Mentions>\r\n                </Form.Item>\r\n                <Form.Item>\r\n                    <UploadImage />\r\n                </Form.Item>\r\n            </Form>\r\n        </Col>\r\n    );\r\n\r\n    const Content = ({ children }) => {\r\n        return <Row>{children}</Row>;\r\n    };\r\n\r\n    return (\r\n        <Card\r\n            title=\"Create Post\"\r\n            size=\"small\"\r\n            actions={[<Icon title=\"post\" type=\"edit\" key=\"edit\" />]}\r\n        >\r\n            <PageHeader\r\n                title=\"Ao Nguyen\"\r\n                tags={<Tag color=\"blue\">Online</Tag>}\r\n                avatar={{\r\n                    src:\r\n                        'https://avatars1.githubusercontent.com/u/8186664?s=460&v=4'\r\n                }}\r\n                style={{ margin: '0px', padding: '0px' }}\r\n            >\r\n                <Content>{content}</Content>\r\n            </PageHeader>\r\n        </Card>\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}