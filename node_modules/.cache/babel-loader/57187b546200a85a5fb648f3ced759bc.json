{"ast":null,"code":"import \"antd/es/drawer/style\";\nimport _Drawer from \"antd/es/drawer\";\nimport React, { useEffect } from 'react';\nimport classNames from 'classnames';\nimport useJsonComparison from 'use-json-comparison';\nimport Omit from 'omit.js';\nimport SiderMenu from './SiderMenu';\nimport { getFlatMenus } from './SiderMenuUtils';\nimport MenuCounter from './Counter';\n\nvar SiderMenuWrapper = function SiderMenuWrapper(props) {\n  var isMobile = props.isMobile,\n      menuData = props.menuData,\n      siderWidth = props.siderWidth,\n      collapsed = props.collapsed,\n      onCollapse = props.onCollapse,\n      style = props.style,\n      className = props.className,\n      hide = props.hide;\n\n  var _MenuCounter$useConta = MenuCounter.useContainer(),\n      setFlatMenus = _MenuCounter$useConta.setFlatMenus,\n      setFlatMenuKeys = _MenuCounter$useConta.setFlatMenuKeys;\n\n  useJsonComparison(function () {\n    if (!menuData || menuData.length < 1) {\n      return function () {\n        return null;\n      };\n    } // 当 menu data 改变的时候重新计算这两个参数\n\n\n    var newFlatMenus = getFlatMenus(menuData);\n    var animationFrameId = requestAnimationFrame(function () {\n      setFlatMenus(newFlatMenus);\n      setFlatMenuKeys(Object.keys(newFlatMenus));\n    });\n    return function () {\n      return window.cancelAnimationFrame && window.cancelAnimationFrame(animationFrameId);\n    };\n  }, menuData);\n  useEffect(function () {\n    if (isMobile === true) {\n      if (onCollapse) {\n        onCollapse(true);\n      }\n    }\n  }, [isMobile]);\n  var omitProps = Omit(props, ['className', 'style']);\n\n  if (hide) {\n    return null;\n  }\n\n  return isMobile ? React.createElement(_Drawer, {\n    visible: !collapsed,\n    placement: \"left\",\n    className: classNames('ant-pro-drawer-sider-menu', className),\n    onClose: function onClose() {\n      return onCollapse && onCollapse(true);\n    },\n    style: Object.assign({\n      padding: 0,\n      height: '100vh'\n    }, style),\n    width: siderWidth,\n    bodyStyle: {\n      height: '100vh',\n      padding: 0\n    }\n  }, React.createElement(SiderMenu, Object.assign({}, omitProps, {\n    className: classNames('ant-pro-sider-menu', className),\n    collapsed: isMobile ? false : collapsed\n  }))) : React.createElement(SiderMenu, Object.assign({\n    className: classNames('ant-pro-sider-menu', className)\n  }, omitProps, {\n    style: style\n  }));\n};\n\nSiderMenuWrapper.defaultProps = {\n  onCollapse: function onCollapse() {\n    return undefined;\n  }\n};\nexport default SiderMenuWrapper;","map":null,"metadata":{},"sourceType":"module"}