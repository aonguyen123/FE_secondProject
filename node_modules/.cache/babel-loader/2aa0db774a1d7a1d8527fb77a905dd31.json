{"ast":null,"code":"var _jsxFileName = \"E:\\\\react-antd\\\\frontend\\\\src\\\\views\\\\Setting\\\\components\\\\GeographicView\\\\GeographicView.js\";\nimport React, { forwardRef } from 'react';\nimport { Spin, Select } from 'antd';\nconst {\n  Option\n} = Select;\nconst nullSelectItem = {\n  label: '',\n  key: ''\n};\nconst GeographicView = forwardRef((props, ref) => {\n  const getProvinceOption = () => {\n    // const { province } = this.props;\n    if (province) {\n      return getOption(province);\n    }\n\n    return [];\n  };\n\n  const getCityOption = () => {\n    // const { city } = this.props;\n    if (city) {\n      return getOption(city);\n    }\n\n    return [];\n  };\n\n  const getOption = list => {\n    if (!list || list.length < 1) {\n      return React.createElement(Option, {\n        key: 0,\n        value: 0,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, \"\\u6CA1\\u6709\\u627E\\u5230\\u9009\\u9879\");\n    }\n\n    return list.map(item => React.createElement(Option, {\n      key: item.id,\n      value: item.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, item.name));\n  };\n\n  const selectProvinceItem = item => {\n    const {\n      dispatch,\n      onChange\n    } = props;\n\n    if (dispatch) {\n      dispatch({\n        type: 'accountAndsettings/fetchCity',\n        payload: item.key\n      });\n    }\n\n    if (onChange) {\n      onChange({\n        province: item,\n        city: nullSelectItem\n      });\n    }\n  };\n\n  const selectCityItem = item => {\n    const {\n      value,\n      onChange\n    } = props;\n\n    if (value && onChange) {\n      onChange({\n        province: value.province,\n        city: item\n      });\n    }\n  };\n\n  return React.createElement(Spin, {\n    spinning: loading,\n    wrapperClassName: styles.row,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, React.createElement(Select, {\n    className: styles.item,\n    value: province,\n    labelInValue: true,\n    showSearch: true,\n    onSelect: selectProvinceItem,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, getProvinceOption()), React.createElement(Select, {\n    className: styles.item,\n    value: city,\n    labelInValue: true,\n    showSearch: true,\n    onSelect: selectCityItem,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, getCityOption()));\n});\nexport default GeographicView;","map":{"version":3,"sources":["E:/react-antd/frontend/src/views/Setting/components/GeographicView/GeographicView.js"],"names":["React","forwardRef","Spin","Select","Option","nullSelectItem","label","key","GeographicView","props","ref","getProvinceOption","province","getOption","getCityOption","city","list","length","map","item","id","name","selectProvinceItem","dispatch","onChange","type","payload","selectCityItem","value","loading","styles","row"],"mappings":"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","sourcesContent":["import React, { forwardRef } from 'react';\r\nimport { Spin, Select } from 'antd';\r\nconst { Option } = Select;\r\nconst nullSelectItem = {\r\n    label: '',\r\n    key: ''\r\n};\r\n\r\nconst GeographicView = forwardRef((props, ref) => {\r\n    const getProvinceOption = () => {\r\n        // const { province } = this.props;\r\n        if (province) {\r\n            return getOption(province);\r\n        }\r\n        return [];\r\n    };\r\n    const getCityOption = () => {\r\n        // const { city } = this.props;\r\n        if (city) {\r\n            return getOption(city);\r\n        }\r\n        return [];\r\n    };\r\n    const getOption = list => {\r\n        if (!list || list.length < 1) {\r\n            return (\r\n                <Option key={0} value={0}>\r\n                    没有找到选项\r\n                </Option>\r\n            );\r\n        }\r\n        return list.map(item => (\r\n            <Option key={item.id} value={item.id}>\r\n                {item.name}\r\n            </Option>\r\n        ));\r\n    };\r\n    const selectProvinceItem = item => {\r\n        const { dispatch, onChange } = props;\r\n\r\n        if (dispatch) {\r\n            dispatch({\r\n                type: 'accountAndsettings/fetchCity',\r\n                payload: item.key\r\n            });\r\n        }\r\n\r\n        if (onChange) {\r\n            onChange({\r\n                province: item,\r\n                city: nullSelectItem\r\n            });\r\n        }\r\n    };\r\n    const selectCityItem = item => {\r\n        const { value, onChange } = props;\r\n\r\n        if (value && onChange) {\r\n            onChange({\r\n                province: value.province,\r\n                city: item\r\n            });\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Spin spinning={loading} wrapperClassName={styles.row}>\r\n            <Select\r\n                className={styles.item}\r\n                value={province}\r\n                labelInValue\r\n                showSearch\r\n                onSelect={selectProvinceItem}\r\n            >\r\n                {getProvinceOption()}\r\n            </Select>\r\n            <Select\r\n                className={styles.item}\r\n                value={city}\r\n                labelInValue\r\n                showSearch\r\n                onSelect={selectCityItem}\r\n            >\r\n                {getCityOption()}\r\n            </Select>\r\n        </Spin>\r\n    );\r\n});\r\n\r\nexport default GeographicView;\r\n"]},"metadata":{},"sourceType":"module"}