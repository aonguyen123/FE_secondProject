{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _dec, _class;\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _autoHeight = require('../autoHeight');\n\nvar _autoHeight2 = _interopRequireDefault(_autoHeight);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar styles = {\n  'waterWave': 'antd-pro-charts-water-wave-waterWave',\n  'text': 'antd-pro-charts-water-wave-text',\n  'waterWaveCanvasWrapper': 'antd-pro-charts-water-wave-waterWaveCanvasWrapper'\n};\n/* eslint no-return-assign: 0 */\n\n/* eslint no-mixed-operators: 0 */\n// riddle: https://riddle.alibaba-inc.com/riddles/2d9a4b90\n\nvar WaterWave = (_dec = (0, _autoHeight2.default)(), _dec(_class = function (_PureComponent) {\n  _inherits(WaterWave, _PureComponent);\n\n  function WaterWave() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, WaterWave);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = WaterWave.__proto__ || Object.getPrototypeOf(WaterWave)).call.apply(_ref, [this].concat(args))), _this), _this.state = {\n      radio: 1\n    }, _this.resize = function () {\n      if (_this.root) {\n        var height = _this.props.height;\n        var offsetWidth = _this.root.parentNode.offsetWidth;\n\n        _this.setState({\n          radio: offsetWidth < height ? offsetWidth / height : 1\n        });\n      }\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  _createClass(WaterWave, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.renderChart();\n      this.resize();\n      window.addEventListener('resize', function () {\n        requestAnimationFrame(function () {\n          return _this2.resize();\n        });\n      }, {\n        passive: true\n      });\n    }\n  }, {\n    key: 'componentDidUpdate',\n    value: function componentDidUpdate(props) {\n      var percent = this.props.percent;\n\n      if (props.percent !== percent) {\n        // 不加这个会造成绘制缓慢\n        this.renderChart('update');\n      }\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      cancelAnimationFrame(this.timer);\n\n      if (this.node) {\n        this.node.innerHTML = '';\n      }\n\n      window.removeEventListener('resize', this.resize);\n    }\n  }, {\n    key: 'renderChart',\n    value: function renderChart(type) {\n      var _props = this.props,\n          percent = _props.percent,\n          _props$color = _props.color,\n          color = _props$color === undefined ? '#1890FF' : _props$color;\n      var data = percent / 100;\n      var self = this;\n      cancelAnimationFrame(this.timer);\n\n      if (!this.node || data !== 0 && !data) {\n        return;\n      }\n\n      var canvas = this.node;\n      var ctx = canvas.getContext('2d');\n      var canvasWidth = canvas.width;\n      var canvasHeight = canvas.height;\n      var radius = canvasWidth / 2;\n      var lineWidth = 2;\n      var cR = radius - lineWidth;\n      ctx.beginPath();\n      ctx.lineWidth = lineWidth * 2;\n      var axisLength = canvasWidth - lineWidth;\n      var unit = axisLength / 8;\n      var range = 0.2; // 振幅\n\n      var currRange = range;\n      var xOffset = lineWidth;\n      var sp = 0; // 周期偏移量\n\n      var currData = 0;\n      var waveupsp = 0.005; // 水波上涨速度\n\n      var arcStack = [];\n      var bR = radius - lineWidth;\n      var circleOffset = -(Math.PI / 2);\n      var circleLock = true;\n\n      for (var i = circleOffset; i < circleOffset + 2 * Math.PI; i += 1 / (8 * Math.PI)) {\n        arcStack.push([radius + bR * Math.cos(i), radius + bR * Math.sin(i)]);\n      }\n\n      var cStartPoint = arcStack.shift();\n      ctx.strokeStyle = color;\n      ctx.moveTo(cStartPoint[0], cStartPoint[1]);\n\n      function drawSin() {\n        ctx.beginPath();\n        ctx.save();\n        var sinStack = [];\n\n        for (var _i = xOffset; _i <= xOffset + axisLength; _i += 20 / axisLength) {\n          var x = sp + (xOffset + _i) / unit;\n          var y = Math.sin(x) * currRange;\n          var dx = _i;\n          var dy = 2 * cR * (1 - currData) + (radius - cR) - unit * y;\n          ctx.lineTo(dx, dy);\n          sinStack.push([dx, dy]);\n        }\n\n        var startPoint = sinStack.shift();\n        ctx.lineTo(xOffset + axisLength, canvasHeight);\n        ctx.lineTo(xOffset, canvasHeight);\n        ctx.lineTo(startPoint[0], startPoint[1]);\n        var gradient = ctx.createLinearGradient(0, 0, 0, canvasHeight);\n        gradient.addColorStop(0, '#ffffff');\n        gradient.addColorStop(1, color);\n        ctx.fillStyle = gradient;\n        ctx.fill();\n        ctx.restore();\n      }\n\n      function render() {\n        ctx.clearRect(0, 0, canvasWidth, canvasHeight);\n\n        if (circleLock && type !== 'update') {\n          if (arcStack.length) {\n            var temp = arcStack.shift();\n            ctx.lineTo(temp[0], temp[1]);\n            ctx.stroke();\n          } else {\n            circleLock = false;\n            ctx.lineTo(cStartPoint[0], cStartPoint[1]);\n            ctx.stroke();\n            arcStack = null;\n            ctx.globalCompositeOperation = 'destination-over';\n            ctx.beginPath();\n            ctx.lineWidth = lineWidth;\n            ctx.arc(radius, radius, bR, 0, 2 * Math.PI, 1);\n            ctx.beginPath();\n            ctx.save();\n            ctx.arc(radius, radius, radius - 3 * lineWidth, 0, 2 * Math.PI, 1);\n            ctx.restore();\n            ctx.clip();\n            ctx.fillStyle = color;\n          }\n        } else {\n          if (data >= 0.85) {\n            if (currRange > range / 4) {\n              var t = range * 0.01;\n              currRange -= t;\n            }\n          } else if (data <= 0.1) {\n            if (currRange < range * 1.5) {\n              var _t = range * 0.01;\n\n              currRange += _t;\n            }\n          } else {\n            if (currRange <= range) {\n              var _t2 = range * 0.01;\n\n              currRange += _t2;\n            }\n\n            if (currRange >= range) {\n              var _t3 = range * 0.01;\n\n              currRange -= _t3;\n            }\n          }\n\n          if (data - currData > 0) {\n            currData += waveupsp;\n          }\n\n          if (data - currData < 0) {\n            currData -= waveupsp;\n          }\n\n          sp += 0.07;\n          drawSin();\n        }\n\n        self.timer = requestAnimationFrame(render);\n      }\n\n      render();\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this3 = this;\n\n      var radio = this.state.radio;\n      var _props2 = this.props,\n          percent = _props2.percent,\n          title = _props2.title,\n          height = _props2.height;\n      return _react2.default.createElement('div', {\n        className: styles.waterWave,\n        ref: function ref(n) {\n          return _this3.root = n;\n        },\n        style: {\n          transform: 'scale(' + radio + ')'\n        }\n      }, _react2.default.createElement('div', {\n        style: {\n          width: height,\n          height: height,\n          overflow: 'hidden'\n        }\n      }, _react2.default.createElement('canvas', {\n        className: styles.waterWaveCanvasWrapper,\n        ref: function ref(n) {\n          return _this3.node = n;\n        },\n        width: height * 2,\n        height: height * 2\n      })), _react2.default.createElement('div', {\n        className: styles.text,\n        style: {\n          width: height\n        }\n      }, title && _react2.default.createElement('span', null, title), _react2.default.createElement('h4', null, percent, '%')));\n    }\n  }]);\n\n  return WaterWave;\n}(_react.PureComponent)) || _class);\nexports.default = WaterWave;\nmodule.exports = exports.default;","map":null,"metadata":{},"sourceType":"script"}