{"ast":null,"code":"import \"antd/es/page-header/style\";\nimport _PageHeader from \"antd/es/page-header\";\nimport \"antd/es/tabs/style\";\nimport _Tabs from \"antd/es/tabs\";\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport React, { useContext } from 'react';\nimport { Helmet } from 'react-helmet';\nimport classNames from 'classnames';\nimport './index.less';\nimport GridContent from '../GridContent';\nimport RouteContext from '../RouteContext';\nvar prefixedClassName = 'ant-pro-page-header-wrap';\n/**\n * render Footer tabList\n * In order to be compatible with the old version of the PageHeader\n * basically all the functions are implemented.\n */\n\nvar renderFooter = function renderFooter(_ref) {\n  var tabList = _ref.tabList,\n      tabActiveKey = _ref.tabActiveKey,\n      onTabChange = _ref.onTabChange,\n      tabBarExtraContent = _ref.tabBarExtraContent,\n      tabProps = _ref.tabProps;\n\n  if (tabList && tabList.length) {\n    return React.createElement(_Tabs, Object.assign({\n      className: \"\".concat(prefixedClassName, \"-tabs\"),\n      activeKey: tabActiveKey,\n      onChange: function onChange(key) {\n        if (onTabChange) {\n          onTabChange(key);\n        }\n      },\n      tabBarExtraContent: tabBarExtraContent\n    }, tabProps), tabList.map(function (item) {\n      return React.createElement(_Tabs.TabPane, Object.assign({}, item, {\n        tab: item.tab,\n        key: item.key\n      }));\n    }));\n  }\n\n  return null;\n};\n\nvar renderPageHeader = function renderPageHeader(content, extraContent) {\n  if (!content && !extraContent) {\n    return null;\n  }\n\n  return React.createElement(\"div\", {\n    className: \"\".concat(prefixedClassName, \"-detail\")\n  }, React.createElement(\"div\", {\n    className: \"\".concat(prefixedClassName, \"-main\")\n  }, React.createElement(\"div\", {\n    className: \"\".concat(prefixedClassName, \"-row\")\n  }, content && React.createElement(\"div\", {\n    className: \"\".concat(prefixedClassName, \"-content\")\n  }, content), extraContent && React.createElement(\"div\", {\n    className: \"\".concat(prefixedClassName, \"-extraContent\")\n  }, extraContent))));\n};\n\nvar defaultPageHeaderRender = function defaultPageHeaderRender(props, value) {\n  var title = props.title,\n      content = props.content,\n      pageHeaderRender = props.pageHeaderRender,\n      extraContent = props.extraContent,\n      style = props.style,\n      restProps = __rest(props, [\"title\", \"content\", \"pageHeaderRender\", \"extraContent\", \"style\"]);\n\n  if (pageHeaderRender) {\n    return pageHeaderRender(Object.assign(Object.assign({}, props), value));\n  }\n\n  var pageHeaderTitle = title;\n\n  if (!title && title !== false) {\n    pageHeaderTitle = value.title;\n  }\n\n  return React.createElement(React.Fragment, null, React.createElement(Helmet, null, React.createElement(\"meta\", {\n    name: \"description\",\n    content: value.title\n  }), typeof props.content === 'string' && React.createElement(\"meta\", {\n    name: \"description\",\n    content: props.content\n  })), React.createElement(_PageHeader, Object.assign({}, value, {\n    title: pageHeaderTitle\n  }, restProps, {\n    footer: renderFooter(restProps)\n  }), renderPageHeader(content, extraContent)));\n};\n\nvar PageHeaderWrapper = function PageHeaderWrapper(props) {\n  var children = props.children,\n      style = props.style;\n  var value = useContext(RouteContext);\n  var className = classNames(prefixedClassName, props.className);\n  return React.createElement(\"div\", {\n    style: style,\n    className: className\n  }, React.createElement(\"div\", {\n    className: \"\".concat(prefixedClassName, \"-page-header-warp\")\n  }, React.createElement(GridContent, null, defaultPageHeaderRender(props, value))), children ? React.createElement(GridContent, null, React.createElement(\"div\", {\n    className: \"\".concat(prefixedClassName, \"-children-content\")\n  }, children)) : null);\n};\n\nexport default PageHeaderWrapper;","map":null,"metadata":{},"sourceType":"module"}