{"ast":null,"code":"var _jsxFileName = \"E:\\\\react-antd\\\\frontend\\\\src\\\\views\\\\Home\\\\Components\\\\ToolPost\\\\ToolPost.js\";\nimport React from 'react';\nimport { Mentions } from 'antd';\nimport debounce from 'lodash/debounce';\nconst {\n  Option\n} = Mentions;\nexport default class ToolPost extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      search: '',\n      loading: false,\n      users: []\n    };\n\n    this.onSearch = search => {\n      this.setState({\n        search,\n        loading: !!search,\n        users: []\n      });\n      console.log('Search:', search);\n      this.loadGithubUsers(search);\n    };\n\n    this.loadGithubUsers = debounce(this.loadGithubUsers, 800);\n  }\n\n  loadGithubUsers(key) {\n    if (!key) {\n      this.setState({\n        users: []\n      });\n      return;\n    }\n\n    fetch(`https://api.github.com/search/users?q=${key}`).then(res => res.json()).then(({\n      items = []\n    }) => {\n      const {\n        search\n      } = this.state;\n      if (search !== key) return;\n      this.setState({\n        users: items.slice(0, 10),\n        loading: false\n      });\n    });\n  }\n\n  render() {\n    const {\n      users,\n      loading\n    } = this.state;\n    return React.createElement(Mentions, {\n      style: {\n        width: '100%'\n      },\n      loading: loading,\n      onSearch: this.onSearch,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, users.map(({\n      login,\n      avatar_url: avatar\n    }) => React.createElement(Option, {\n      key: login,\n      value: login,\n      className: \"antd-demo-dynamic-option\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: avatar,\n      alt: login,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, login))));\n  }\n\n}","map":{"version":3,"sources":["E:/react-antd/frontend/src/views/Home/Components/ToolPost/ToolPost.js"],"names":["React","Mentions","debounce","Option","ToolPost","Component","constructor","state","search","loading","users","onSearch","setState","console","log","loadGithubUsers","key","fetch","then","res","json","items","slice","render","width","map","login","avatar_url","avatar"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,MAAzB;AACA,OAAOC,QAAP,MAAqB,iBAArB;AAEA,MAAM;AAAEC,EAAAA;AAAF,IAAaF,QAAnB;AAEA,eAAe,MAAMG,QAAN,SAAuBJ,KAAK,CAACK,SAA7B,CAAuC;AACpDC,EAAAA,WAAW,GAAG;AACZ;AADY,SAMdC,KANc,GAMN;AACNC,MAAAA,MAAM,EAAE,EADF;AAENC,MAAAA,OAAO,EAAE,KAFH;AAGNC,MAAAA,KAAK,EAAE;AAHD,KANM;;AAAA,SAYdC,QAZc,GAYHH,MAAM,IAAI;AACnB,WAAKI,QAAL,CAAc;AAAEJ,QAAAA,MAAF;AAAUC,QAAAA,OAAO,EAAE,CAAC,CAACD,MAArB;AAA6BE,QAAAA,KAAK,EAAE;AAApC,OAAd;AACAG,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBN,MAAvB;AACA,WAAKO,eAAL,CAAqBP,MAArB;AACD,KAhBa;;AAGZ,SAAKO,eAAL,GAAuBb,QAAQ,CAAC,KAAKa,eAAN,EAAuB,GAAvB,CAA/B;AACD;;AAcDA,EAAAA,eAAe,CAACC,GAAD,EAAM;AACnB,QAAI,CAACA,GAAL,EAAU;AACR,WAAKJ,QAAL,CAAc;AACZF,QAAAA,KAAK,EAAE;AADK,OAAd;AAGA;AACD;;AAEDO,IAAAA,KAAK,CAAE,yCAAwCD,GAAI,EAA9C,CAAL,CACGE,IADH,CACQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADf,EAEGF,IAFH,CAEQ,CAAC;AAAEG,MAAAA,KAAK,GAAG;AAAV,KAAD,KAAoB;AACxB,YAAM;AAAEb,QAAAA;AAAF,UAAa,KAAKD,KAAxB;AACA,UAAIC,MAAM,KAAKQ,GAAf,EAAoB;AAEpB,WAAKJ,QAAL,CAAc;AACZF,QAAAA,KAAK,EAAEW,KAAK,CAACC,KAAN,CAAY,CAAZ,EAAe,EAAf,CADK;AAEZb,QAAAA,OAAO,EAAE;AAFG,OAAd;AAID,KAVH;AAWD;;AAEDc,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEb,MAAAA,KAAF;AAASD,MAAAA;AAAT,QAAqB,KAAKF,KAAhC;AAEA,WACE,oBAAC,QAAD;AAAU,MAAA,KAAK,EAAE;AAAEiB,QAAAA,KAAK,EAAE;AAAT,OAAjB;AAAoC,MAAA,OAAO,EAAEf,OAA7C;AAAsD,MAAA,QAAQ,EAAE,KAAKE,QAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGD,KAAK,CAACe,GAAN,CAAU,CAAC;AAAEC,MAAAA,KAAF;AAASC,MAAAA,UAAU,EAAEC;AAArB,KAAD,KACT,oBAAC,MAAD;AAAQ,MAAA,GAAG,EAAEF,KAAb;AAAoB,MAAA,KAAK,EAAEA,KAA3B;AAAkC,MAAA,SAAS,EAAC,0BAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,GAAG,EAAEE,MAAV;AAAkB,MAAA,GAAG,EAAEF,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAOA,KAAP,CAFF,CADD,CADH,CADF;AAUD;;AArDmD","sourcesContent":["import React from 'react';\r\nimport { Mentions } from 'antd';\r\nimport debounce from 'lodash/debounce';\r\n\r\nconst { Option } = Mentions;\r\n\r\nexport default class ToolPost extends React.Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.loadGithubUsers = debounce(this.loadGithubUsers, 800);\r\n  }\r\n\r\n  state = {\r\n    search: '',\r\n    loading: false,\r\n    users: [],\r\n  };\r\n\r\n  onSearch = search => {\r\n    this.setState({ search, loading: !!search, users: [] });\r\n    console.log('Search:', search);\r\n    this.loadGithubUsers(search);\r\n  };\r\n\r\n  loadGithubUsers(key) {\r\n    if (!key) {\r\n      this.setState({\r\n        users: [],\r\n      });\r\n      return;\r\n    }\r\n\r\n    fetch(`https://api.github.com/search/users?q=${key}`)\r\n      .then(res => res.json())\r\n      .then(({ items = [] }) => {\r\n        const { search } = this.state;\r\n        if (search !== key) return;\r\n\r\n        this.setState({\r\n          users: items.slice(0, 10),\r\n          loading: false,\r\n        });\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const { users, loading } = this.state;\r\n\r\n    return (\r\n      <Mentions style={{ width: '100%' }} loading={loading} onSearch={this.onSearch}>\r\n        {users.map(({ login, avatar_url: avatar }) => (\r\n          <Option key={login} value={login} className=\"antd-demo-dynamic-option\">\r\n            <img src={avatar} alt={login} />\r\n            <span>{login}</span>\r\n          </Option>\r\n        ))}\r\n      </Mentions>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}