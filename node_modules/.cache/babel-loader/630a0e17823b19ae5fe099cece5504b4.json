{"ast":null,"code":"var _jsxFileName = \"E:\\\\react-antd\\\\frontend\\\\src\\\\views\\\\Account\\\\components\\\\Interests\\\\Interests.js\";\nimport React, { useState, useEffect } from 'react';\nimport { PlusOutlined } from '@ant-design/icons';\nimport { Tag, Input } from 'antd';\nimport './styles.css';\nexport default function Interests() {\n  const [inputVisible, setInputVisible] = useState(false);\n  const [inputValue, setInputValue] = useState('');\n  const [newTags, setNewTags] = useState([]);\n  let auto = undefined;\n  useEffect(() => {\n    if (inputVisible) {\n      auto.focus();\n    }\n  }, [inputVisible, auto]);\n\n  const showInput = () => {\n    setInputVisible(true);\n  };\n\n  const handleInputChange = e => {\n    setInputValue(e.target.value);\n  };\n\n  const handleClose = removedTag => {\n    const tags = newTags.filter(tag => tag.key !== removedTag.key);\n    setNewTags(tags);\n  };\n\n  const handleInputConfirm = () => {\n    const inputValue1 = inputValue;\n    let newTags1 = newTags;\n\n    if (inputValue1 && newTags1.filter(tag => tag.label === inputValue1).length === 0) {\n      newTags1 = [...newTags1, {\n        key: `new-${newTags1.length}`,\n        label: inputValue1\n      }];\n    }\n\n    setNewTags([...newTags1]);\n    setInputVisible(false);\n    setInputValue('');\n  };\n\n  return React.createElement(\"div\", {\n    className: \"tags\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"tagsTitle\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, \"Interests\"), newTags.map(item => React.createElement(Tag, {\n    key: item.key,\n    closable: true,\n    onClose: () => handleClose(item),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, item.label)), inputVisible && React.createElement(Input, {\n    ref: ref => auto = ref,\n    type: \"text\",\n    size: \"small\",\n    style: {\n      width: 78\n    },\n    value: inputValue,\n    onChange: handleInputChange,\n    onBlur: handleInputConfirm,\n    onPressEnter: handleInputConfirm,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }), !inputVisible && React.createElement(Tag, {\n    onClick: showInput,\n    style: {\n      background: '#fff',\n      borderStyle: 'dashed'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(PlusOutlined, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  })));\n}","map":{"version":3,"sources":["E:/react-antd/frontend/src/views/Account/components/Interests/Interests.js"],"names":["React","useState","useEffect","PlusOutlined","Tag","Input","Interests","inputVisible","setInputVisible","inputValue","setInputValue","newTags","setNewTags","auto","undefined","focus","showInput","handleInputChange","e","target","value","handleClose","removedTag","tags","filter","tag","key","handleInputConfirm","inputValue1","newTags1","label","length","map","item","ref","width","background","borderStyle"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { PlusOutlined } from '@ant-design/icons';\r\nimport { Tag, Input } from 'antd';\r\nimport './styles.css';\r\n\r\nexport default function Interests() {\r\n    const [inputVisible, setInputVisible] = useState(false);\r\n    const [inputValue, setInputValue] = useState('');\r\n    const [newTags, setNewTags] = useState([]);\r\n    let auto = undefined;\r\n\r\n    useEffect(() => {\r\n        if (inputVisible) {\r\n            auto.focus();\r\n        }\r\n    }, [inputVisible, auto]);\r\n    const showInput = () => {\r\n        setInputVisible(true);\r\n    };\r\n    const handleInputChange = e => {\r\n        setInputValue(e.target.value);\r\n    };\r\n    const handleClose = removedTag => {\r\n        const tags = newTags.filter(tag => tag.key !== removedTag.key);\r\n        setNewTags(tags);\r\n    };\r\n    const handleInputConfirm = () => {\r\n        const inputValue1 = inputValue;\r\n        let newTags1 = newTags;\r\n        if (\r\n            inputValue1 &&\r\n            newTags1.filter(tag => tag.label === inputValue1).length === 0\r\n        ) {\r\n            newTags1 = [\r\n                ...newTags1,\r\n                {\r\n                    key: `new-${newTags1.length}`,\r\n                    label: inputValue1\r\n                }\r\n            ];\r\n        }\r\n        setNewTags([...newTags1]);\r\n        setInputVisible(false);\r\n        setInputValue('');\r\n    };\r\n\r\n    return (\r\n        <div className=\"tags\">\r\n            <div className=\"tagsTitle\">Interests</div>\r\n            {newTags.map(item => (\r\n                <Tag key={item.key} closable onClose={() => handleClose(item)}>\r\n                    {item.label}\r\n                </Tag>\r\n            ))}\r\n            {inputVisible && (\r\n                <Input\r\n                    ref={ref => (auto = ref)}\r\n                    type=\"text\"\r\n                    size=\"small\"\r\n                    style={{\r\n                        width: 78\r\n                    }}\r\n                    value={inputValue}\r\n                    onChange={handleInputChange}\r\n                    onBlur={handleInputConfirm}\r\n                    onPressEnter={handleInputConfirm}\r\n                />\r\n            )}\r\n            {!inputVisible && (\r\n                <Tag\r\n                    onClick={showInput}\r\n                    style={{\r\n                        background: '#fff',\r\n                        borderStyle: 'dashed'\r\n                    }}\r\n                >\r\n                    <PlusOutlined />\r\n                </Tag>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}