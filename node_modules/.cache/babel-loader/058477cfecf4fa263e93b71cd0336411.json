{"ast":null,"code":"var _jsxFileName = \"E:\\\\react-antd\\\\frontend\\\\src\\\\views\\\\Account\\\\Account.js\";\nimport React from 'react';\nimport { Card, Row, Col } from 'antd';\nimport { GridContent } from '@ant-design/pro-layout';\nimport './styles.css';\nexport default function Account(props) {\n  return React.createElement(GridContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, React.createElement(Row, {\n    gutter: [16, 16],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, React.createElement(Col, {\n    xl: 7,\n    lg: 7,\n    md: 7,\n    sm: 24,\n    xs: 24,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, React.createElement(Card, {\n    bordered: false,\n    style: {\n      marginBottom: 24\n    } //loading={dataLoading}\n    ,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: styles.avatarHolder,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    alt: \"\",\n    src: currentUser.avatar,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: styles.name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, currentUser.name), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, currentUser.signature)), React.createElement(\"div\", {\n    className: styles.detail,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: styles.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }), currentUser.title), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: styles.group,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }), currentUser.group), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: styles.address,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }), (currentUser.geographic || {\n    province: {\n      label: ''\n    }\n  }).province.label, (currentUser.geographic || {\n    city: {\n      label: ''\n    }\n  }).city.label)), React.createElement(Divider, {\n    dashed: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: styles.tags,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: styles.tagsTitle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, \"\\u6807\\u7B7E\"), (currentUser.tags || []).concat(newTags).map(item => React.createElement(Tag, {\n    key: item.key,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, item.label)), inputVisible && React.createElement(Input, {\n    ref: ref => this.saveInputRef(ref),\n    type: \"text\",\n    size: \"small\",\n    style: {\n      width: 78\n    },\n    value: inputValue,\n    onChange: this.handleInputChange,\n    onBlur: this.handleInputConfirm,\n    onPressEnter: this.handleInputConfirm,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }), !inputVisible && React.createElement(Tag, {\n    onClick: this.showInput,\n    style: {\n      background: '#fff',\n      borderStyle: 'dashed'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, React.createElement(PlusOutlined, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }))), React.createElement(Divider, {\n    style: {\n      marginTop: 16\n    },\n    dashed: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: styles.team,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: styles.teamTitle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, \"\\u56E2\\u961F\"), React.createElement(Row, {\n    gutter: 36,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, currentUser.notice && currentUser.notice.map(item => React.createElement(Col, {\n    key: item.id,\n    lg: 24,\n    xl: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: item.href,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, React.createElement(Avatar, {\n    size: \"small\",\n    src: item.logo,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }), item.member))))))), React.createElement(Col, {\n    xl: 17,\n    lg: 17,\n    md: 17,\n    sm: 24,\n    xs: 24,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, React.createElement(Card, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, \"account\"))));\n}","map":{"version":3,"sources":["E:/react-antd/frontend/src/views/Account/Account.js"],"names":["React","Card","Row","Col","GridContent","Account","props","marginBottom","styles","avatarHolder","currentUser","avatar","name","signature","detail","title","group","address","geographic","province","label","city","tags","tagsTitle","concat","newTags","map","item","key","inputVisible","ref","saveInputRef","width","inputValue","handleInputChange","handleInputConfirm","showInput","background","borderStyle","marginTop","team","teamTitle","notice","id","href","logo","member"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Card, Row, Col } from 'antd';\r\nimport { GridContent } from '@ant-design/pro-layout';\r\nimport './styles.css';\r\n\r\nexport default function Account(props) {\r\n    return (\r\n        <GridContent>\r\n            <Row gutter={[16, 16]}>\r\n                <Col xl={7} lg={7} md={7} sm={24} xs={24}>\r\n                    <Card\r\n                        bordered={false}\r\n                        style={{\r\n                            marginBottom: 24\r\n                        }}\r\n                        //loading={dataLoading}\r\n                    >\r\n                        \r\n                            <div className={styles.avatarHolder}>\r\n                                <img alt=\"\" src={currentUser.avatar} />\r\n                                <div className={styles.name}>\r\n                                    {currentUser.name}\r\n                                </div>\r\n                                <div>{currentUser.signature}</div>\r\n                            </div>\r\n                            <div className={styles.detail}>\r\n                                <p>\r\n                                    <i className={styles.title} />\r\n                                    {currentUser.title}\r\n                                </p>\r\n                                <p>\r\n                                    <i className={styles.group} />\r\n                                    {currentUser.group}\r\n                                </p>\r\n                                <p>\r\n                                    <i className={styles.address} />\r\n                                    {\r\n                                        (\r\n                                            currentUser.geographic || {\r\n                                                province: {\r\n                                                    label: ''\r\n                                                }\r\n                                            }\r\n                                        ).province.label\r\n                                    }\r\n                                    {\r\n                                        (\r\n                                            currentUser.geographic || {\r\n                                                city: {\r\n                                                    label: ''\r\n                                                }\r\n                                            }\r\n                                        ).city.label\r\n                                    }\r\n                                </p>\r\n                            </div>\r\n                            <Divider dashed />\r\n                            <div className={styles.tags}>\r\n                                <div className={styles.tagsTitle}>标签</div>\r\n                                {(currentUser.tags || [])\r\n                                    .concat(newTags)\r\n                                    .map(item => (\r\n                                        <Tag key={item.key}>{item.label}</Tag>\r\n                                    ))}\r\n                                {inputVisible && (\r\n                                    <Input\r\n                                        ref={ref => this.saveInputRef(ref)}\r\n                                        type=\"text\"\r\n                                        size=\"small\"\r\n                                        style={{\r\n                                            width: 78\r\n                                        }}\r\n                                        value={inputValue}\r\n                                        onChange={this.handleInputChange}\r\n                                        onBlur={this.handleInputConfirm}\r\n                                        onPressEnter={this.handleInputConfirm}\r\n                                    />\r\n                                )}\r\n                                {!inputVisible && (\r\n                                    <Tag\r\n                                        onClick={this.showInput}\r\n                                        style={{\r\n                                            background: '#fff',\r\n                                            borderStyle: 'dashed'\r\n                                        }}\r\n                                    >\r\n                                        <PlusOutlined />\r\n                                    </Tag>\r\n                                )}\r\n                            </div>\r\n                            <Divider\r\n                                style={{\r\n                                    marginTop: 16\r\n                                }}\r\n                                dashed\r\n                            />\r\n                            <div className={styles.team}>\r\n                                <div className={styles.teamTitle}>团队</div>\r\n                                <Row gutter={36}>\r\n                                    {currentUser.notice &&\r\n                                        currentUser.notice.map(item => (\r\n                                            <Col key={item.id} lg={24} xl={12}>\r\n                                                <Link to={item.href}>\r\n                                                    <Avatar\r\n                                                        size=\"small\"\r\n                                                        src={item.logo}\r\n                                                    />\r\n                                                    {item.member}\r\n                                                </Link>\r\n                                            </Col>\r\n                                        ))}\r\n                                </Row>\r\n                            </div>\r\n                        \r\n                    </Card>\r\n                </Col>\r\n                <Col xl={17} lg={17} md={17} sm={24} xs={24}>\r\n                    <Card>account</Card>\r\n                </Col>\r\n            </Row>\r\n        </GridContent>\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}