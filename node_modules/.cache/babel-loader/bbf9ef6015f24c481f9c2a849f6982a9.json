{"ast":null,"code":"import { GET_CURRENT_PLACE, GET_ERRORS } from './../constants/types';\nimport { callAPI, getAccessToken } from './../common';\n\nconst getCurrentPlace = (lat, lon, history) => async dispatch => {\n  const result = await getAccessToken(history);\n\n  if (result) {\n    callAPI(`/weather/get-geocode?latitude=${lat}&longitude=${lon}`).then(res => {\n      dispatch({\n        type: GET_CURRENT_PLACE,\n        payload: res.data\n      });\n    }).catch(err => {\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      });\n    });\n  }\n};\n\nexport default {\n  getCurrentPlace\n};","map":{"version":3,"sources":["E:/react-antd/frontend/src/actions/geocode.action.js"],"names":["GET_CURRENT_PLACE","GET_ERRORS","callAPI","getAccessToken","getCurrentPlace","lat","lon","history","dispatch","result","then","res","type","payload","data","catch","err","response"],"mappings":"AAAA,SAASA,iBAAT,EAA4BC,UAA5B,QAA8C,sBAA9C;AACA,SAASC,OAAT,EAAkBC,cAAlB,QAAwC,aAAxC;;AAEA,MAAMC,eAAe,GAAG,CAACC,GAAD,EAAMC,GAAN,EAAWC,OAAX,KAAuB,MAAMC,QAAN,IAAkB;AAC7D,QAAMC,MAAM,GAAG,MAAMN,cAAc,CAACI,OAAD,CAAnC;;AACA,MAAGE,MAAH,EACA;AACIP,IAAAA,OAAO,CAAE,iCAAgCG,GAAI,cAAaC,GAAI,EAAvD,CAAP,CACKI,IADL,CACUC,GAAG,IAAI;AACTH,MAAAA,QAAQ,CAAE;AACNI,QAAAA,IAAI,EAAEZ,iBADA;AAENa,QAAAA,OAAO,EAAEF,GAAG,CAACG;AAFP,OAAF,CAAR;AAIH,KANL,EAOKC,KAPL,CAOWC,GAAG,IAAI;AACVR,MAAAA,QAAQ,CAAE;AACNI,QAAAA,IAAI,EAAEX,UADA;AAENY,QAAAA,OAAO,EAAEG,GAAG,CAACC,QAAJ,CAAaH;AAFhB,OAAF,CAAR;AAIH,KAZL;AAaH;AACJ,CAlBD;;AAoBA,eAAe;AACXV,EAAAA;AADW,CAAf","sourcesContent":["import { GET_CURRENT_PLACE, GET_ERRORS } from './../constants/types';\r\nimport { callAPI, getAccessToken } from './../common';\r\n\r\nconst getCurrentPlace = (lat, lon, history) => async dispatch => {\r\n    const result = await getAccessToken(history);\r\n    if(result)\r\n    {\r\n        callAPI(`/weather/get-geocode?latitude=${lat}&longitude=${lon}`)\r\n            .then(res => {\r\n                dispatch ({\r\n                    type: GET_CURRENT_PLACE,\r\n                    payload: res.data\r\n                });\r\n            })\r\n            .catch(err => {\r\n                dispatch ({\r\n                    type: GET_ERRORS,\r\n                    payload: err.response.data\r\n                });\r\n            });\r\n    }\r\n}\r\n\r\nexport default {\r\n    getCurrentPlace\r\n};"]},"metadata":{},"sourceType":"module"}