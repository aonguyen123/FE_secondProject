{"ast":null,"code":"var _jsxFileName = \"E:\\\\react-antd\\\\frontend\\\\src\\\\views\\\\Setting\\\\Setting.js\";\nimport React, { useState, useEffect } from 'react';\nimport { GridContent } from '@ant-design/pro-layout';\nimport { Menu } from 'antd';\nimport { BasicSetting } from './components';\nimport './styles.css';\nconst {\n  Item\n} = Menu;\nconst menuMap = {\n  base: 'Basic Settings',\n  security: 'Security Settings',\n  notification: 'Message Notification'\n};\nexport default function Setting() {\n  const [selectKey, setSelectKey] = useState('base');\n  const [mode, setMode] = useState('horizontal');\n  let auto = undefined;\n\n  const getMenu = () => {\n    return Object.keys(menuMap).map(item => React.createElement(Item, {\n      key: item,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, menuMap[item]));\n  };\n\n  const getRightTitle = () => {\n    return menuMap[selectKey];\n  };\n\n  const renderChildren = () => {\n    switch (selectKey) {\n      case 'base':\n        return React.createElement(BasicSetting, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 30\n          },\n          __self: this\n        });\n\n      case 'security':\n        return React.createElement(\"h1\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33\n          },\n          __self: this\n        }, \"security\");\n\n      case 'notification':\n        return React.createElement(\"h1\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36\n          },\n          __self: this\n        }, \"notification\");\n\n      default:\n        break;\n    }\n\n    return null;\n  };\n\n  const selectedKey = key => {\n    setSelectKey(key);\n  };\n\n  const resize = () => {\n    if (!auto) {\n      return;\n    }\n\n    requestAnimationFrame(() => {\n      if (!auto) {\n        return;\n      }\n\n      let mode = 'horizontal';\n      const {\n        offsetWidth\n      } = auto;\n\n      if (auto.offsetWidth < 641 && offsetWidth > 400) {\n        console.log('ssss');\n        mode = 'inline';\n      }\n\n      if (window.innerWidth < 768 && offsetWidth > 400) {\n        console.log('ssss1');\n        mode = 'inline';\n      }\n\n      setMode(mode);\n    });\n  };\n\n  useEffect(() => {\n    window.addEventListener('resize', resize);\n    resize();\n    return () => {\n      window.removeEventListener('resize', resize);\n    };\n  }, []);\n  console.log(mode);\n  return React.createElement(GridContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"main\",\n    ref: ref => auto = ref,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"leftMenu-account\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, React.createElement(Menu, {\n    mode: mode,\n    selectedKeys: [selectKey],\n    onClick: ({\n      key\n    }) => selectedKey(key),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, getMenu())), React.createElement(\"div\", {\n    className: \"right-account\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, getRightTitle()), renderChildren())));\n}","map":{"version":3,"sources":["E:/react-antd/frontend/src/views/Setting/Setting.js"],"names":["React","useState","useEffect","GridContent","Menu","BasicSetting","Item","menuMap","base","security","notification","Setting","selectKey","setSelectKey","mode","setMode","auto","undefined","getMenu","Object","keys","map","item","getRightTitle","renderChildren","selectedKey","key","resize","requestAnimationFrame","offsetWidth","console","log","window","innerWidth","addEventListener","removeEventListener","ref"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { GridContent } from '@ant-design/pro-layout';\r\nimport { Menu } from 'antd';\r\nimport { BasicSetting } from './components';\r\nimport './styles.css';\r\n\r\nconst { Item } = Menu;\r\nconst menuMap = {\r\n    base: 'Basic Settings',\r\n    security: 'Security Settings',\r\n    notification: 'Message Notification'\r\n};\r\n\r\nexport default function Setting() {\r\n    const [selectKey, setSelectKey] = useState('base');\r\n    const [mode, setMode] = useState('horizontal');\r\n    let auto = undefined;\r\n\r\n    const getMenu = () => {\r\n        return Object.keys(menuMap).map(item => (\r\n            <Item key={item}>{menuMap[item]}</Item>\r\n        ));\r\n    };\r\n    const getRightTitle = () => {\r\n        return menuMap[selectKey];\r\n    };\r\n    const renderChildren = () => {\r\n        switch (selectKey) {\r\n            case 'base':\r\n                return <BasicSetting />;\r\n\r\n            case 'security':\r\n                return <h1>security</h1>;\r\n\r\n            case 'notification':\r\n                return <h1>notification</h1>;\r\n\r\n            default:\r\n                break;\r\n        }\r\n        return null;\r\n    };\r\n    const selectedKey = key => {\r\n        setSelectKey(key);\r\n    };\r\n    const resize = () => {\r\n        if (!auto) {\r\n            return;\r\n        }\r\n        requestAnimationFrame(() => {\r\n            if (!auto) {\r\n                return;\r\n            }\r\n            let mode = 'horizontal';\r\n            const { offsetWidth } = auto;\r\n\r\n            if (auto.offsetWidth < 641 && offsetWidth > 400) {\r\n                console.log('ssss')\r\n                mode = 'inline';\r\n              }\r\n        \r\n              if (window.innerWidth < 768 && offsetWidth > 400) {\r\n                console.log('ssss1')\r\n                mode = 'inline';\r\n              }\r\n            setMode(mode);\r\n        });\r\n    };\r\n    useEffect(() => {\r\n        window.addEventListener('resize', resize);\r\n        resize();\r\n        return () => {\r\n            window.removeEventListener('resize', resize);\r\n        };\r\n    }, []);\r\n    console.log(mode)\r\n    return (\r\n        <GridContent>\r\n            <div className=\"main\" ref={ref => (auto = ref)}>\r\n                <div className=\"leftMenu-account\">\r\n                    <Menu\r\n                        mode={mode}\r\n                        selectedKeys={[selectKey]}\r\n                        onClick={({ key }) => selectedKey(key)}\r\n                    >\r\n                        {getMenu()}\r\n                    </Menu>\r\n                </div>\r\n                <div className=\"right-account\">\r\n                    <div className=\"title\">{getRightTitle()}</div>\r\n                    {renderChildren()}\r\n                </div>\r\n            </div>\r\n        </GridContent>\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}