{"ast":null,"code":"function _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest();\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) {\n    return;\n  }\n\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nimport { useState } from 'react';\nimport { createContainer } from 'unstated-next';\n\nfunction useMenuCounter() {\n  var _useState = useState(undefined),\n      _useState2 = _slicedToArray(_useState, 2),\n      flatMenus = _useState2[0],\n      setFlatMenus = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      flatMenuKeys = _useState4[0],\n      setFlatMenuKeys = _useState4[1];\n\n  return {\n    flatMenus: flatMenus,\n    setFlatMenus: setFlatMenus,\n    flatMenuKeys: flatMenuKeys,\n    setFlatMenuKeys: setFlatMenuKeys\n  };\n}\n\nvar MenuCounter = createContainer(useMenuCounter);\nexport default MenuCounter;","map":null,"metadata":{},"sourceType":"module"}